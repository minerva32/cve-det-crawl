CVE Number : CVE-2009-0746
Commit Message : 
ext4: Add sanity check to make_indexed_dir
Commit Details : 
Make sure the rec_len field in the '..' entry is sane, lest we overrun
the directory block and cause a kernel oops on a purposefully
corrupted filesystem.

Thanks to Sami Liedes for reporting this bug.

http://bugzilla.kernel.org/show_bug.cgi?id=12430

Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
Cc: stable@kernel.org

Before patch : 
 	struct fake_dirent *fde;
 
 	blocksize =  dir >i_sb >s_blocksize;
 	dxtrace(printk(KERN_DEBUG "Creating index\n"));
 	retval = ext4_journal_get_write_access(handle, bh);
 	if (retval) {
 		ext4_std_error(dir >i_sb, retval);
 	}
 	root = (struct dx_root *) bh >b_data;
 
 	bh2 = ext4_append(handle, dir, &block, &retval);
 	if (!(bh2)) {
 		brelse(bh);
 	EXT4_I(dir) >i_flags |= EXT4_INDEX_FL;
 	data1 = bh2 >b_data;
 
 	/* The 0th block becomes the root, move the dirents out */
 	fde = &root >dotdot;
 	de = (struct ext4_dir_entry_2 *)((char *)fde  
 		ext4_rec_len_from_disk(fde >rec_len));
 	len = ((char *) root)   blocksize   (char *) de;
 	memcpy (data1, de, len);
 	de = (struct ext4_dir_entry_2 *) data1;
 	top = data1   len;
After patch : 
 	struct fake_dirent *fde;
 
 	blocksize =  dir >i_sb >s_blocksize;
 	dxtrace(printk(KERN_DEBUG "Creating index: inode %lu\n", dir >i_ino));
 	retval = ext4_journal_get_write_access(handle, bh);
 	if (retval) {
 		ext4_std_error(dir >i_sb, retval);
 	}
 	root = (struct dx_root *) bh >b_data;
 
 	/* The 0th block becomes the root, move the dirents out */
 	fde = &root >dotdot;
 	de = (struct ext4_dir_entry_2 *)((char *)fde  
 		ext4_rec_len_from_disk(fde >rec_len));
 	if ((char *) de >= (((char *) root)   blocksize)) {
 		ext4_error(dir >i_sb, __func__,
 			   "invalid rec_len for '..' in inode %lu",
 			   dir >i_ino);
 		brelse(bh);
 		return  EIO;
 	}
 	len = ((char *) root)   blocksize   (char *) de;
 
 	/* Allocate new block for the 0th block's dirents */
 	bh2 = ext4_append(handle, dir, &block, &retval);
 	if (!(bh2)) {
 		brelse(bh);
 	EXT4_I(dir) >i_flags |= EXT4_INDEX_FL;
 	data1 = bh2 >b_data;
 
 	memcpy (data1, de, len);
 	de = (struct ext4_dir_entry_2 *) data1;
 	top = data1   len;
