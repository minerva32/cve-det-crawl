CVE Number : CVE-2011-2723
Commit Message : 
gro: Only reset frag0 when skb can be pulled
Commit Details : 
Currently skb_gro_header_slow unconditionally resets frag0 and
frag0_len.  However, when we can't pull on the skb this leaves
the GRO fields in an inconsistent state.

This patch fixes this by only resetting those fields after the
pskb_may_pull test.

Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
Signed-off-by: David S. Miller <davem@davemloft.net>

Before patch : 
 static inline void *skb_gro_header_slow(struct sk_buff *skb, unsigned int hlen,
 					unsigned int offset)
 {
 	NAPI_GRO_CB(skb) >frag0 = NULL;
 	NAPI_GRO_CB(skb) >frag0_len = 0;
 	return pskb_may_pull(skb, hlen) ? skb >data   offset : NULL;
 }
 
 static inline void *skb_gro_mac_header(struct sk_buff *skb)
After patch : 
 static inline void *skb_gro_header_slow(struct sk_buff *skb, unsigned int hlen,
 					unsigned int offset)
 {
 	if (!pskb_may_pull(skb, hlen))
 		return NULL;
 
 	NAPI_GRO_CB(skb) >frag0 = NULL;
 	NAPI_GRO_CB(skb) >frag0_len = 0;
 	return skb >data   offset;
 }
 
 static inline void *skb_gro_mac_header(struct sk_buff *skb)
