CVE Number : CVE-2017-18257
Commit Message : 
f2fs: fix a dead loop in f2fs_fiemap()
Commit Details : 
A dead loop can be triggered in f2fs_fiemap() using the test case
as below:

	...
	fd = open();
	fallocate(fd, 0, 0, 4294967296);
	ioctl(fd, FS_IOC_FIEMAP, fiemap_buf);
	...

It's caused by an overflow in __get_data_block():
	...
	bh->b_size = map.m_len << inode->i_blkbits;
	...
map.m_len is an unsigned int, and bh->b_size is a size_t which is 64 bits
on 64 bits archtecture, type conversion from an unsigned int to a size_t
will result in an overflow.

In the above-mentioned case, bh->b_size will be zero, and f2fs_fiemap()
will call get_data_block() at block 0 again an again.

Fix this by adding a force conversion before left shift.

Signed-off-by: Wei Fang <fangwei1@huawei.com>
Acked-by: Chao Yu <yuchao0@huawei.com>
Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>

Before patch : 
 	if (!err) {
 		map_bh(bh, inode >i_sb, map.m_pblk);
 		bh >b_state = (bh >b_state & ~F2FS_MAP_FLAGS) | map.m_flags;
 		bh >b_size = map.m_len << inode >i_blkbits;
 	}
 	return err;
 }
After patch : 
 	if (!err) {
 		map_bh(bh, inode >i_sb, map.m_pblk);
 		bh >b_state = (bh >b_state & ~F2FS_MAP_FLAGS) | map.m_flags;
 		bh >b_size = (u64)map.m_len << inode >i_blkbits;
 	}
 	return err;
 }
