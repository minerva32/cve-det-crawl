CVE Number : CVE-2010-4655
Commit Message : 
net: clear heap allocations for privileged ethtool actions
Commit Details : 
Several other ethtool functions leave heap uncleared (potentially) by
drivers. Some interfaces appear safe (eeprom, etc), in that the sizes
are well controlled. In some situations (e.g. unchecked error conditions),
the heap will remain unchanged in areas before copying back to userspace.
Note that these are less of an issue since these all require CAP_NET_ADMIN.

Cc: stable@kernel.org
Signed-off-by: Kees Cook <kees.cook@canonical.com>
Acked-by: Ben Hutchings <bhutchings@solarflare.com>
Signed-off-by: David S. Miller <davem@davemloft.net>

Before patch : 
 	    (KMALLOC_MAX_SIZE   sizeof(*indir)) / sizeof(*indir >ring_index))
 		return  ENOMEM;
 	full_size = sizeof(*indir)   sizeof(*indir >ring_index) * table_size;
 	indir = kmalloc(full_size, GFP_USER);
 	if (!indir)
 		return  ENOMEM;
 
 
 	gstrings.len = ret;
 
 	data = kmalloc(gstrings.len * ETH_GSTRING_LEN, GFP_USER);
 	if (!data)
 		return  ENOMEM;
 
 	if (regs.len > reglen)
 		regs.len = reglen;
 
 	regbuf = kmalloc(reglen, GFP_USER);
 	if (!regbuf)
 		return  ENOMEM;
 
After patch : 
 	    (KMALLOC_MAX_SIZE   sizeof(*indir)) / sizeof(*indir >ring_index))
 		return  ENOMEM;
 	full_size = sizeof(*indir)   sizeof(*indir >ring_index) * table_size;
 	indir = kzalloc(full_size, GFP_USER);
 	if (!indir)
 		return  ENOMEM;
 
 
 	gstrings.len = ret;
 
 	data = kzalloc(gstrings.len * ETH_GSTRING_LEN, GFP_USER);
 	if (!data)
 		return  ENOMEM;
 
 	if (regs.len > reglen)
 		regs.len = reglen;
 
 	regbuf = kzalloc(reglen, GFP_USER);
 	if (!regbuf)
 		return  ENOMEM;
 
