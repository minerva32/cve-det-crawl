CVE Number : CVE-2010-4169
Commit Message : 
perf_events: Fix perf_counter_mmap() hook in mprotect()
Commit Details : 
As pointed out by Linus, commit dab5855 ("perf_counter: Add mmap event hooks to
mprotect()") is fundamentally wrong as mprotect_fixup() can free 'vma' due to
merging. Fix the problem by moving perf_event_mmap() hook to
mprotect_fixup().

Note: there's another successful return path from mprotect_fixup() if old
flags equal to new flags. We don't, however, need to call
perf_event_mmap() there because 'perf' already knows the VMA is
executable.

Reported-by: Dave Jones <davej@redhat.com>
Analyzed-by: Linus Torvalds <torvalds@linux-foundation.org>
Cc: Ingo Molnar <mingo@elte.hu>
Reviewed-by: Peter Zijlstra <a.p.zijlstra@chello.nl>
Signed-off-by: Pekka Enberg <penberg@kernel.org>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

Before patch : 
 	mmu_notifier_invalidate_range_end(mm, start, end);
 	vm_stat_account(mm, oldflags, vma >vm_file,  nrpages);
 	vm_stat_account(mm, newflags, vma >vm_file, nrpages);
 	return 0;
 
 fail:
 		error = mprotect_fixup(vma, &prev, nstart, tmp, newflags);
 		if (error)
 			goto out;
 		perf_event_mmap(vma);
 		nstart = tmp;
 
 		if (nstart < prev >vm_end)
After patch : 
 	mmu_notifier_invalidate_range_end(mm, start, end);
 	vm_stat_account(mm, oldflags, vma >vm_file,  nrpages);
 	vm_stat_account(mm, newflags, vma >vm_file, nrpages);
 	perf_event_mmap(vma);
 	return 0;
 
 fail:
 		error = mprotect_fixup(vma, &prev, nstart, tmp, newflags);
 		if (error)
 			goto out;
 		nstart = tmp;
 
 		if (nstart < prev >vm_end)
