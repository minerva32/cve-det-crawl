CVE Number : CVE-2020-12465
Commit Message : 
mt76: fix array overflow on receiving too many fragments for a packet
Commit Details : 
If the hardware receives an oversized packet with too many rx fragments,
skb_shinfo(skb)->frags can overflow and corrupt memory of adjacent pages.
This becomes especially visible if it corrupts the freelist pointer of
a slab page.

Cc: stable@vger.kernel.org
Signed-off-by: Felix Fietkau <nbd@nbd.name>
Signed-off-by: Kalle Valo <kvalo@codeaurora.org>

Before patch : 
 	struct page *page = virt_to_head_page(data);
 	int offset = data   page_address(page);
 	struct sk_buff *skb = q >rx_head;
 
 	offset  = q >buf_offset;
 	skb_add_rx_frag(skb, skb_shinfo(skb) >nr_frags, page, offset, len,
 			q >buf_size);
 
 	if (more)
 		return;
After patch : 
 	struct page *page = virt_to_head_page(data);
 	int offset = data   page_address(page);
 	struct sk_buff *skb = q >rx_head;
 	struct skb_shared_info *shinfo = skb_shinfo(skb);
 
 	if (shinfo >nr_frags < ARRAY_SIZE(shinfo >frags)) {
 		offset  = q >buf_offset;
 		skb_add_rx_frag(skb, shinfo >nr_frags, page, offset, len,
 				q >buf_size);
 	}
 
 	if (more)
 		return;
