CVE Number : CVE-2016-7425
Commit Message : 
scsi: arcmsr: Buffer overflow in arcmsr_iop_message_xfer()
Commit Details : 
We need to put an upper bound on "user_len" so the memcpy() doesn't
overflow.

Cc: <stable@vger.kernel.org>
Reported-by: Marco Grassi <marco.gra@gmail.com>
Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
Reviewed-by: Tomas Henzl <thenzl@redhat.com>
Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

Before patch : 
 	}
 	case ARCMSR_MESSAGE_WRITE_WQBUFFER: {
 		unsigned char *ver_addr;
 		int32_t user_len, cnt2end;
 		uint8_t *pQbuffer, *ptmpuserbuffer;
 		ver_addr = kmalloc(ARCMSR_API_DATA_BUFLEN, GFP_ATOMIC);
 		if (!ver_addr) {
 		}
 		ptmpuserbuffer = ver_addr;
 		user_len = pcmdmessagefld >cmdmessage.Length;
 		memcpy(ptmpuserbuffer,
 			pcmdmessagefld >messagedatabuffer, user_len);
 		spin_lock_irqsave(&acb >wqbuffer_lock, flags);
After patch : 
 	}
 	case ARCMSR_MESSAGE_WRITE_WQBUFFER: {
 		unsigned char *ver_addr;
 		uint32_t user_len;
 		int32_t cnt2end;
 		uint8_t *pQbuffer, *ptmpuserbuffer;
 		ver_addr = kmalloc(ARCMSR_API_DATA_BUFLEN, GFP_ATOMIC);
 		if (!ver_addr) {
 		}
 		ptmpuserbuffer = ver_addr;
 		user_len = pcmdmessagefld >cmdmessage.Length;
 		if (user_len > ARCMSR_API_DATA_BUFLEN) {
 			retvalue = ARCMSR_MESSAGE_FAIL;
 			kfree(ver_addr);
 			goto message_out;
 		}
 		memcpy(ptmpuserbuffer,
 			pcmdmessagefld >messagedatabuffer, user_len);
 		spin_lock_irqsave(&acb >wqbuffer_lock, flags);
