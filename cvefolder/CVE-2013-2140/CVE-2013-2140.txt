CVE Number : CVE-2013-2140
Commit Message : 
xen/blkback: Check device permissions before allowing OP_DISCARD
Commit Details : 
We need to make sure that the device is not RO or that
the request is not past the number of sectors we want to
issue the DISCARD operation for.

This fixes CVE-2013-2140.

Cc: stable@vger.kernel.org
Acked-by: Jan Beulich <JBeulich@suse.com>
Acked-by: Ian Campbell <Ian.Campbell@citrix.com>
v1: Made it pr_warn instead of pr_debug
Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>

Before patch : 
 	int status = BLKIF_RSP_OKAY;
 	struct block_device *bdev = blkif >vbd.bdev;
 	unsigned long secure;
 
 	blkif >st_ds_req  ;
 
 	xen_blkif_get(blkif);
 	err = blkdev_issue_discard(bdev, req >u.discard.sector_number,
 				   req >u.discard.nr_sectors,
 				   GFP_KERNEL, secure);
 
 	if (err ==  EOPNOTSUPP) {
 		pr_debug(DRV_PFX "discard op failed, not supported\n");
 		status = BLKIF_RSP_EOPNOTSUPP;
After patch : 
 	int status = BLKIF_RSP_OKAY;
 	struct block_device *bdev = blkif >vbd.bdev;
 	unsigned long secure;
 	struct phys_req preq;
 
 	preq.sector_number = req >u.discard.sector_number;
 	preq.nr_sects      = req >u.discard.nr_sectors;
 
 	err = xen_vbd_translate(&preq, blkif, WRITE);
 	if (err) {
 		pr_warn(DRV_PFX "access denied: DISCARD [%llu >%llu] on dev=%04x\n",
 			preq.sector_number,
 			preq.sector_number   preq.nr_sects, blkif >vbd.pdevice);
 		goto fail_response;
 	}
 	blkif >st_ds_req  ;
 
 	xen_blkif_get(blkif);
 	err = blkdev_issue_discard(bdev, req >u.discard.sector_number,
 				   req >u.discard.nr_sectors,
 				   GFP_KERNEL, secure);
 fail_response:
 	if (err ==  EOPNOTSUPP) {
 		pr_debug(DRV_PFX "discard op failed, not supported\n");
 		status = BLKIF_RSP_EOPNOTSUPP;
