CVE Number : CVE-2019-20811
Commit Message : 
net-sysfs: call dev_hold if kobject_init_and_add success
Commit Details : 
In netdev_queue_add_kobject and rx_queue_add_kobject,
if sysfs_create_group failed, kobject_put will call
netdev_queue_release to decrease dev refcont, however
dev_hold has not be called. So we will see this while
unregistering dev:

unregister_netdevice: waiting for bcsh0 to become free. Usage count = -1

Reported-by: Hulk Robot <hulkci@huawei.com>
Fixes: d0d668371679 ("net: don't decrement kobj reference count on init failure")
Signed-off-by: YueHaibing <yuehaibing@huawei.com>
Signed-off-by: David S. Miller <davem@davemloft.net>

Before patch : 
 	if (error)
 		return error;
 
 	if (dev >sysfs_rx_queue_group) {
 		error = sysfs_create_group(kobj, dev >sysfs_rx_queue_group);
 		if (error) {
 	}
 
 	kobject_uevent(kobj, KOBJ_ADD);
 	dev_hold(queue >dev);
 
 	return error;
 }
 	if (error)
 		return error;
 
 #ifdef CONFIG_BQL
 	error = sysfs_create_group(kobj, &dql_group);
 	if (error) {
 #endif
 
 	kobject_uevent(kobj, KOBJ_ADD);
 	dev_hold(queue >dev);
 
 	return 0;
 }
After patch : 
 	if (error)
 		return error;
 
 	dev_hold(queue >dev);
 
 	if (dev >sysfs_rx_queue_group) {
 		error = sysfs_create_group(kobj, dev >sysfs_rx_queue_group);
 		if (error) {
 	}
 
 	kobject_uevent(kobj, KOBJ_ADD);
 
 	return error;
 }
 	if (error)
 		return error;
 
 	dev_hold(queue >dev);
 
 #ifdef CONFIG_BQL
 	error = sysfs_create_group(kobj, &dql_group);
 	if (error) {
 #endif
 
 	kobject_uevent(kobj, KOBJ_ADD);
 
 	return 0;
 }
