CVE Number : CVE-2008-0001
Commit Message : 
Use access mode instead of open flags to determine needed permissions
Commit Details : 
Way back when (in commit 834f2a4a1554dc5b2598038b3fe8703defcbe467, aka
"VFS: Allow the filesystem to return a full file pointer on open intent"
to be exact), Trond changed the open logic to keep track of the original
flags to a file open, in order to pass down the the intent of a dentry
lookup to the low-level filesystem.

However, when doing that reorganization, it changed the meaning of
namei_flags, and thus inadvertently changed the test of access mode for
directories (and RO filesystem) to use the wrong flag.  So fix those
test back to use access mode ("acc_mode") rather than the open flag
("flag").

Issue noticed by Bill Roman at Datalight.

Reported-and-tested-by: Bill Roman <bill.roman@datalight.com>
Acked-by: Trond Myklebust <Trond.Myklebust@netapp.com>
Acked-by: Al Viro <viro@ZenIV.linux.org.uk>
Cc: Christoph Hellwig <hch@lst.de>
Cc: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

Before patch : 
 	if (S_ISLNK(inode >i_mode))
 		return  ELOOP;
 
 	if (S_ISDIR(inode >i_mode) && (flag & FMODE_WRITE))
 		return  EISDIR;
 
 	/*
 			return  EACCES;
 
 		flag &= ~O_TRUNC;
 	} else if (IS_RDONLY(inode) && (flag & FMODE_WRITE))
 		return  EROFS;
 
 	error = vfs_permission(nd, acc_mode);
After patch : 
 	if (S_ISLNK(inode >i_mode))
 		return  ELOOP;
 
 	if (S_ISDIR(inode >i_mode) && (acc_mode & MAY_WRITE))
 		return  EISDIR;
 
 	/*
 			return  EACCES;
 
 		flag &= ~O_TRUNC;
 	} else if (IS_RDONLY(inode) && (acc_mode & MAY_WRITE))
 		return  EROFS;
 
 	error = vfs_permission(nd, acc_mode);
