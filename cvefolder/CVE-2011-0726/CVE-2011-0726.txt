CVE Number : CVE-2011-0726
Commit Message : 
proc: protect mm start_code/end_code in /proc/pid/stat
Commit Details : 
While mm->start_stack was protected from cross-uid viewing (commit
f83ce3e6b02d5 ("proc: avoid information leaks to non-privileged
processes")), the start_code and end_code values were not.  This would
allow the text location of a PIE binary to leak, defeating ASLR.

Note that the value "1" is used instead of "0" for a protected value since
"ps", "killall", and likely other readers of /proc/pid/stat, take
start_code of "0" to mean a kernel thread and will misbehave.  Thanks to
Brad Spengler for pointing this out.

Addresses CVE-2011-0726

Signed-off-by: Kees Cook <kees.cook@canonical.com>
Cc: <stable@kernel.org>
Cc: Alexey Dobriyan <adobriyan@gmail.com>
Cc: David Howells <dhowells@redhat.com>
Cc: Eugene Teo <eugeneteo@kernel.sg>
Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
Cc: Brad Spengler <spender@grsecurity.net>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

Before patch : 
 		vsize,
 		mm ? get_mm_rss(mm) : 0,
 		rsslim,
 		mm ? mm >start_code : 0,
 		mm ? mm >end_code : 0,
 		(permitted && mm) ? mm >start_stack : 0,
 		esp,
 		eip,
After patch : 
 		vsize,
 		mm ? get_mm_rss(mm) : 0,
 		rsslim,
 		mm ? (permitted ? mm >start_code : 1) : 0,
 		mm ? (permitted ? mm >end_code : 1) : 0,
 		(permitted && mm) ? mm >start_stack : 0,
 		esp,
 		eip,
