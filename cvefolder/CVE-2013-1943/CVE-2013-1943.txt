CVE Number : CVE-2013-1943
Commit Message : 
KVM: Validate userspace_addr of memslot when registered
Commit Details : 
This way, we can avoid checking the user space address many times when
we read the guest memory.

Although we can do the same for write if we check which slots are
writable, we do not care write now: reading the guest memory happens
more often than writing.

avi: change VERIFY_READ to VERIFY_WRITE

Signed-off-by: Takuya Yoshikawa <yoshikawa.takuya@oss.ntt.co.jp>
Signed-off-by: Avi Kivity <avi@redhat.com>

Before patch : 
 		}
 
 		ptep_user = (pt_element_t __user *)((void *)host_addr   offset);
 		if (unlikely(copy_from_user(&pte, ptep_user, sizeof(pte)))) {
 			present = false;
 			break;
 		}
 		goto out;
 	if (mem >guest_phys_addr & (PAGE_SIZE   1))
 		goto out;
 	if (user_alloc && (mem >userspace_addr & (PAGE_SIZE   1)))
 		goto out;
 	if (mem >slot >= KVM_MEMORY_SLOTS   KVM_PRIVATE_MEM_SLOTS)
 		goto out;
 	addr = gfn_to_hva(kvm, gfn);
 	if (kvm_is_error_hva(addr))
 		return  EFAULT;
 	r = copy_from_user(data, (void __user *)addr   offset, len);
 	if (r)
 		return  EFAULT;
 	return 0;
After patch : 
 		}
 
 		ptep_user = (pt_element_t __user *)((void *)host_addr   offset);
 		if (unlikely(__copy_from_user(&pte, ptep_user, sizeof(pte)))) {
 			present = false;
 			break;
 		}
 		goto out;
 	if (mem >guest_phys_addr & (PAGE_SIZE   1))
 		goto out;
 	/* We can read the guest memory with __xxx_user() later on. */
 	if (user_alloc &&
 	    ((mem >userspace_addr & (PAGE_SIZE   1)) ||
 	     !access_ok(VERIFY_WRITE, mem >userspace_addr, mem >memory_size)))
 		goto out;
 	if (mem >slot >= KVM_MEMORY_SLOTS   KVM_PRIVATE_MEM_SLOTS)
 		goto out;
 	addr = gfn_to_hva(kvm, gfn);
 	if (kvm_is_error_hva(addr))
 		return  EFAULT;
 	r = __copy_from_user(data, (void __user *)addr   offset, len);
 	if (r)
 		return  EFAULT;
 	return 0;
