CVE Number : CVE-2017-16912
Commit Message : 
usbip: fix stub_rx: get_pipe() to validate endpoint number
Commit Details : 
get_pipe() routine doesn't validate the input endpoint number
and uses to reference ep_in and ep_out arrays. Invalid endpoint
number can trigger BUG(). Range check the epnum and returning
error instead of calling BUG().

Change caller stub_recv_cmd_submit() to handle the get_pipe()
error return.

Reported-by: Secunia Research <vuln@secunia.com>
Cc: stable <stable@vger.kernel.org>
Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

Before patch : 
 	struct usb_host_endpoint *ep;
 	struct usb_endpoint_descriptor *epd = NULL;
 
 	if (dir == USBIP_DIR_IN)
 		ep = udev >ep_in[epnum & 0x7f];
 	else
 		ep = udev >ep_out[epnum & 0x7f];
 	if (!ep) {
 		dev_err(&sdev >udev >dev, "no such endpoint?, %d\n",
 			epnum);
 		BUG();
 	}
 
 	epd = &ep >desc;
 	if (usb_endpoint_xfer_control(epd)) {
 			return usb_rcvisocpipe(udev, epnum);
 	}
 
 	/* NOT REACHED */
 	dev_err(&sdev >udev >dev, "get pipe, epnum %d\n", epnum);
 	return 0;
 }
 
 static void masking_bogus_flags(struct urb *urb)
 	struct usb_device *udev = sdev >udev;
 	int pipe = get_pipe(sdev, pdu >base.ep, pdu >base.direction);
 
 	priv = stub_priv_alloc(sdev, pdu);
 	if (!priv)
 		return;
After patch : 
 	struct usb_host_endpoint *ep;
 	struct usb_endpoint_descriptor *epd = NULL;
 
 	if (epnum < 0 || epnum > 15)
 		goto err_ret;
 
 	if (dir == USBIP_DIR_IN)
 		ep = udev >ep_in[epnum & 0x7f];
 	else
 		ep = udev >ep_out[epnum & 0x7f];
 	if (!ep)
 		goto err_ret;
 
 	epd = &ep >desc;
 	if (usb_endpoint_xfer_control(epd)) {
 			return usb_rcvisocpipe(udev, epnum);
 	}
 
 err_ret:
 	/* NOT REACHED */
 	dev_err(&sdev >udev >dev, "get pipe() invalid epnum %d\n", epnum);
 	return  1;
 }
 
 static void masking_bogus_flags(struct urb *urb)
 	struct usb_device *udev = sdev >udev;
 	int pipe = get_pipe(sdev, pdu >base.ep, pdu >base.direction);
 
 	if (pipe ==  1)
 		return;
 
 	priv = stub_priv_alloc(sdev, pdu);
 	if (!priv)
 		return;
