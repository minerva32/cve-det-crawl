CVE Number : CVE-2019-14283
Commit Message : 
floppy: fix out-of-bounds read in copy_buffer
Commit Details : 
This fixes a global out-of-bounds read access in the copy_buffer
function of the floppy driver.

The FDDEFPRM ioctl allows one to set the geometry of a disk.  The sect
and head fields (unsigned int) of the floppy_drive structure are used to
compute the max_sector (int) in the make_raw_rw_request function.  It is
possible to overflow the max_sector.  Next, max_sector is passed to the
copy_buffer function and used in one of the memcpy calls.

An unprivileged user could trigger the bug if the device is accessible,
but requires a floppy disk to be inserted.

The patch adds the check for the .sect * .head multiplication for not
overflowing in the set_geometry function.

The bug was found by syzkaller.

Signed-off-by: Denis Efremov <efremov@ispras.ru>
Tested-by: Willy Tarreau <w@1wt.eu>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

Before patch : 
 	int cnt;
 
 	/* sanity checking for parameters. */
 	if (g >sect <= 0 ||
 	    g >head <= 0 ||
 	    /* check for zero in F_SECT_PER_TRACK */
 	    (unsigned char)((g >sect << 2) >> FD_SIZECODE(g)) == 0 ||
 	    g >track <= 0 || g >track > UDP >tracks >> STRETCH(g) ||
After patch : 
 	int cnt;
 
 	/* sanity checking for parameters. */
 	if ((int)g >sect <= 0 ||
 	    (int)g >head <= 0 ||
 	    /* check for overflow in max_sector */
 	    (int)(g >sect * g >head) <= 0 ||
 	    /* check for zero in F_SECT_PER_TRACK */
 	    (unsigned char)((g >sect << 2) >> FD_SIZECODE(g)) == 0 ||
 	    g >track <= 0 || g >track > UDP >tracks >> STRETCH(g) ||
