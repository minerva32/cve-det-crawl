CVE Number : CVE-2010-1088
Commit Message : 
fix LOOKUP_FOLLOW on automount "symlinks"
Commit Details : 
Make sure that automount "symlinks" are followed regardless of LOOKUP_FOLLOW;
it should have no effect on them.

Cc: stable@kernel.org
Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

Before patch : 
 }
 
 /*
  * Name resolution.
  * This is the basic name resolution function, turning a pathname into
  * the final dentry. We expect 'base' to be positive and a directory.
 		if (err)
 			break;
 		inode = next.dentry >d_inode;
 		if ((lookup_flags & LOOKUP_FOLLOW)
 		    && inode && inode >i_op >follow_link) {
 			err = do_follow_link(&next, nd);
 			if (err)
 				goto return_err;
After patch : 
 }
 
 /*
  * This is a temporary kludge to deal with "automount" symlinks; proper
  * solution is to trigger them on follow_mount(), so that do_lookup()
  * would DTRT.  To be killed before 2.6.34 final.
  */
 static inline int follow_on_final(struct inode *inode, unsigned lookup_flags)
 {
 	return inode && unlikely(inode >i_op >follow_link) &&
 		((lookup_flags & LOOKUP_FOLLOW) || S_ISDIR(inode >i_mode));
 }
 
 /*
  * Name resolution.
  * This is the basic name resolution function, turning a pathname into
  * the final dentry. We expect 'base' to be positive and a directory.
 		if (err)
 			break;
 		inode = next.dentry >d_inode;
 		if (follow_on_final(inode, lookup_flags)) {
 			err = do_follow_link(&next, nd);
 			if (err)
 				goto return_err;
