CVE Number : CVE-2017-15649
Commit Message : 
packet: in packet_do_bind, test fanout with bind_lock held
Commit Details : 
Once a socket has po->fanout set, it remains a member of the group
until it is destroyed. The prot_hook must be constant and identical
across sockets in the group.

If fanout_add races with packet_do_bind between the test of po->fanout
and taking the lock, the bind call may make type or dev inconsistent
with that of the fanout group.

Hold po->bind_lock when testing po->fanout to avoid this race.

I had to introduce artificial delay (local_bh_enable) to actually
observe the race.

Fixes: dc99f600698d ("packet: Add fanout support.")
Signed-off-by: Willem de Bruijn <willemb@google.com>
Reviewed-by: Eric Dumazet <edumazet@google.com>
Signed-off-by: David S. Miller <davem@davemloft.net>

Before patch : 
 	int ret = 0;
 	bool unlisted = false;
 
 	if (po >fanout)
 		return  EINVAL;
 
 	lock_sock(sk);
 	spin_lock(&po >bind_lock);
 	rcu_read_lock();
 
 	if (name) {
 		dev = dev_get_by_name_rcu(sock_net(sk), name);
 		if (!dev) {
After patch : 
 	int ret = 0;
 	bool unlisted = false;
 
 	lock_sock(sk);
 	spin_lock(&po >bind_lock);
 	rcu_read_lock();
 
 	if (po >fanout) {
 		ret =  EINVAL;
 		goto out_unlock;
 	}
 
 	if (name) {
 		dev = dev_get_by_name_rcu(sock_net(sk), name);
 		if (!dev) {
