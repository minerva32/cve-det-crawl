CVE Number : CVE-2010-4164
Commit Message : 
x25: Prevent crashing when parsing bad X.25 facilities
Commit Details : 
Now with improved comma support.

On parsing malformed X.25 facilities, decrementing the remaining length
may cause it to underflow.  Since the length is an unsigned integer,
this will result in the loop continuing until the kernel crashes.

This patch adds checks to ensure decrementing the remaining length does
not cause it to wrap around.

Signed-off-by: Dan Rosenberg <drosenberg@vsecurity.com>
Signed-off-by: David S. Miller <davem@davemloft.net>

Before patch : 
 	while (len > 0) {
 		switch (*p & X25_FAC_CLASS_MASK) {
 		case X25_FAC_CLASS_A:
 			switch (*p) {
 			case X25_FAC_REVERSE:
 				if((p[1] & 0x81) == 0x81) {
 			len  = 2;
 			break;
 		case X25_FAC_CLASS_B:
 			switch (*p) {
 			case X25_FAC_PACKET_SIZE:
 				facilities >pacsize_in  = p[1];
 			len  = 3;
 			break;
 		case X25_FAC_CLASS_C:
 			printk(KERN_DEBUG "X.25: unknown facility %02X, "
 			       "values %02X, %02X, %02X\n",
 			       p[0], p[1], p[2], p[3]);
 			len  = 4;
 			break;
 		case X25_FAC_CLASS_D:
 			switch (*p) {
 			case X25_FAC_CALLING_AE:
 				if (p[1] > X25_MAX_DTE_FACIL_LEN || p[1] <= 1)
 				break;
 			default:
 				printk(KERN_DEBUG "X.25: unknown facility %02X,"
 					"length %d, values %02X, %02X, "
 					"%02X, %02X\n",
 					p[0], p[1], p[2], p[3], p[4], p[5]);
 				break;
 			}
 			len  = p[1]   2;
After patch : 
 	while (len > 0) {
 		switch (*p & X25_FAC_CLASS_MASK) {
 		case X25_FAC_CLASS_A:
 			if (len < 2)
 				return 0;
 			switch (*p) {
 			case X25_FAC_REVERSE:
 				if((p[1] & 0x81) == 0x81) {
 			len  = 2;
 			break;
 		case X25_FAC_CLASS_B:
 			if (len < 3)
 				return 0;
 			switch (*p) {
 			case X25_FAC_PACKET_SIZE:
 				facilities >pacsize_in  = p[1];
 			len  = 3;
 			break;
 		case X25_FAC_CLASS_C:
 			if (len < 4)
 				return 0;
 			printk(KERN_DEBUG "X.25: unknown facility %02X, "
 			       "values %02X, %02X, %02X\n",
 			       p[0], p[1], p[2], p[3]);
 			len  = 4;
 			break;
 		case X25_FAC_CLASS_D:
 			if (len < p[1]   2)
 				return 0;
 			switch (*p) {
 			case X25_FAC_CALLING_AE:
 				if (p[1] > X25_MAX_DTE_FACIL_LEN || p[1] <= 1)
 				break;
 			default:
 				printk(KERN_DEBUG "X.25: unknown facility %02X,"
 					"length %d\n", p[0], p[1]);
 				break;
 			}
 			len  = p[1]   2;
