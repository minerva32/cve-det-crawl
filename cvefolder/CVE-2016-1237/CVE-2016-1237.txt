CVE Number : CVE-2016-1237
Commit Message : 
nfsd: check permissions when setting ACLs
Commit Details : 
Use set_posix_acl, which includes proper permission checks, instead of
calling ->set_acl directly.  Without this anyone may be able to grant
themselves permissions to a file by setting the ACL.

Lock the inode to make the new checks atomic with respect to set_acl.
(Also, nfsd was the only caller of set_acl not locking the inode, so I
suspect this may fix other races.)

This also simplifies the code, and ensures our ACLs are checked by
posix_acl_valid.

The permission checks and the inode locking were lost with commit
4ac7249e, which changed nfsd to use the set_acl inode operation directly
instead of going through xattr handlers.

Reported-by: David Sinquin <david@sinquin.eu>
agreunba@redhat.com: use set_posix_acl
Fixes: 4ac7249e
Cc: Christoph Hellwig <hch@infradead.org>
Cc: Al Viro <viro@zeniv.linux.org.uk>
Cc: stable@vger.kernel.org
Signed-off-by: J. Bruce Fields <bfields@redhat.com>

Before patch : 
 		goto out;
 
 	inode = d_inode(fh >fh_dentry);
 	if (!IS_POSIXACL(inode) || !inode >i_op >set_acl) {
 		error =  EOPNOTSUPP;
 		goto out_errno;
 	}
 
 	error = fh_want_write(fh);
 	if (error)
 		goto out_errno;
 
 	error = inode >i_op >set_acl(inode, argp >acl_access, ACL_TYPE_ACCESS);
 	if (error)
 		goto out_drop_write;
 	error = inode >i_op >set_acl(inode, argp >acl_default,
 				     ACL_TYPE_DEFAULT);
 	if (error)
 		goto out_drop_write;
 
 	fh_drop_write(fh);
 
 	posix_acl_release(argp >acl_access);
 	posix_acl_release(argp >acl_default);
 	return nfserr;
 out_drop_write:
 	fh_drop_write(fh);
 out_errno:
 	nfserr = nfserrno(error);
 		goto out;
 
 	inode = d_inode(fh >fh_dentry);
 	if (!IS_POSIXACL(inode) || !inode >i_op >set_acl) {
 		error =  EOPNOTSUPP;
 		goto out_errno;
 	}
 
 	error = fh_want_write(fh);
 	if (error)
 		goto out_errno;
 
 	error = inode >i_op >set_acl(inode, argp >acl_access, ACL_TYPE_ACCESS);
 	if (error)
 		goto out_drop_write;
 	error = inode >i_op >set_acl(inode, argp >acl_default,
 				     ACL_TYPE_DEFAULT);
 
 out_drop_write:
 	fh_drop_write(fh);
 out_errno:
 	nfserr = nfserrno(error);
 	dentry = fhp >fh_dentry;
 	inode = d_inode(dentry);
 
 	if (!inode >i_op >set_acl || !IS_POSIXACL(inode))
 		return nfserr_attrnotsupp;
 
 	if (S_ISDIR(inode >i_mode))
 		flags = NFS4_ACL_DIR;
 
 	if (host_error < 0)
 		goto out_nfserr;
 
 	host_error = inode >i_op >set_acl(inode, pacl, ACL_TYPE_ACCESS);
 	if (host_error < 0)
 		goto out_release;
 
 	if (S_ISDIR(inode >i_mode)) {
 		host_error = inode >i_op >set_acl(inode, dpacl,
 						  ACL_TYPE_DEFAULT);
 	}
 
 out_release:
 	posix_acl_release(pacl);
 	posix_acl_release(dpacl);
 out_nfserr:
After patch : 
 		goto out;
 
 	inode = d_inode(fh >fh_dentry);
 
 	error = fh_want_write(fh);
 	if (error)
 		goto out_errno;
 
 	fh_lock(fh);
 
 	error = set_posix_acl(inode, ACL_TYPE_ACCESS, argp >acl_access);
 	if (error)
 		goto out_drop_lock;
 	error = set_posix_acl(inode, ACL_TYPE_DEFAULT, argp >acl_default);
 	if (error)
 		goto out_drop_lock;
 
 	fh_unlock(fh);
 
 	fh_drop_write(fh);
 
 	posix_acl_release(argp >acl_access);
 	posix_acl_release(argp >acl_default);
 	return nfserr;
 out_drop_lock:
 	fh_unlock(fh);
 	fh_drop_write(fh);
 out_errno:
 	nfserr = nfserrno(error);
 		goto out;
 
 	inode = d_inode(fh >fh_dentry);
 
 	error = fh_want_write(fh);
 	if (error)
 		goto out_errno;
 
 	fh_lock(fh);
 
 	error = set_posix_acl(inode, ACL_TYPE_ACCESS, argp >acl_access);
 	if (error)
 		goto out_drop_lock;
 	error = set_posix_acl(inode, ACL_TYPE_DEFAULT, argp >acl_default);
 
 out_drop_lock:
 	fh_unlock(fh);
 	fh_drop_write(fh);
 out_errno:
 	nfserr = nfserrno(error);
 	dentry = fhp >fh_dentry;
 	inode = d_inode(dentry);
 
 	if (S_ISDIR(inode >i_mode))
 		flags = NFS4_ACL_DIR;
 
 	if (host_error < 0)
 		goto out_nfserr;
 
 	fh_lock(fhp);
 
 	host_error = set_posix_acl(inode, ACL_TYPE_ACCESS, pacl);
 	if (host_error < 0)
 		goto out_drop_lock;
 
 	if (S_ISDIR(inode >i_mode)) {
 		host_error = set_posix_acl(inode, ACL_TYPE_DEFAULT, dpacl);
 	}
 
 out_drop_lock:
 	fh_unlock(fhp);
 
 	posix_acl_release(pacl);
 	posix_acl_release(dpacl);
 out_nfserr:
