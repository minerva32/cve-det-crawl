CVE Number : CVE-2019-15505
Commit Message : 
media: technisat-usb2: break out of loop at end of buffer
Commit Details : 
Ensure we do not access the buffer beyond the end if no 0xff byte
is encountered.

Reported-by: syzbot+eaaaf38a95427be88f4b@syzkaller.appspotmail.com
Signed-off-by: Sean Young <sean@mess.org>
Reviewed-by: Kees Cook <keescook@chromium.org>
Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>

Before patch : 
 static int technisat_usb2_get_ir(struct dvb_usb_device *d)
 {
 	struct technisat_usb2_state *state = d >priv;
 	u8 *buf = state >buf;
 	u8 *b;
 	int ret;
 	struct ir_raw_event ev;
 
 	buf[0] = GET_IR_DATA_VENDOR_REQUEST;
 	buf[1] = 0x08;
 		return 0; /* no key pressed */
 
 	/* decoding */
 	b = buf 1;
 
 #if 0
 	deb_rc("RC: %d ", ret);
 	debug_dump(b, ret, deb_rc);
 #endif
 
 	ev.pulse = 0;
 	while (1) {
 		ev.pulse = !ev.pulse;
 		ev.duration = (*b * FIRMWARE_CLOCK_DIVISOR * FIRMWARE_CLOCK_TICK) / 1000;
 		ir_raw_event_store(d >rc_dev, &ev);
 
 		b  ;
 		if (*b == 0xff) {
 			ev.pulse = 0;
 			ev.duration = 888888*2;
 			ir_raw_event_store(d >rc_dev, &ev);
 			break;
 		}
 	}
 
 	ir_raw_event_handle(d >rc_dev);
After patch : 
 static int technisat_usb2_get_ir(struct dvb_usb_device *d)
 {
 	struct technisat_usb2_state *state = d >priv;
 	struct ir_raw_event ev;
 	u8 *buf = state >buf;
 	int i, ret;
 
 	buf[0] = GET_IR_DATA_VENDOR_REQUEST;
 	buf[1] = 0x08;
 		return 0; /* no key pressed */
 
 	/* decoding */
 
 #if 0
 	deb_rc("RC: %d ", ret);
 	debug_dump(buf   1, ret, deb_rc);
 #endif
 
 	ev.pulse = 0;
 	for (i = 1; i < ARRAY_SIZE(state >buf); i  ) {
 		if (buf[i] == 0xff) {
 			ev.pulse = 0;
 			ev.duration = 888888*2;
 			ir_raw_event_store(d >rc_dev, &ev);
 			break;
 		}
 
 		ev.pulse = !ev.pulse;
 		ev.duration = (buf[i] * FIRMWARE_CLOCK_DIVISOR *
 			       FIRMWARE_CLOCK_TICK) / 1000;
 		ir_raw_event_store(d >rc_dev, &ev);
 	}
 
 	ir_raw_event_handle(d >rc_dev);
