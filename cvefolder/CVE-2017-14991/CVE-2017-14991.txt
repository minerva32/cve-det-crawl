CVE Number : CVE-2017-14991
Commit Message : 
scsi: sg: fixup infoleak when using SG_GET_REQUEST_TABLE
Commit Details : 
When calling SG_GET_REQUEST_TABLE ioctl only a half-filled table is
returned; the remaining part will then contain stale kernel memory
information.  This patch zeroes out the entire table to avoid this
issue.

Signed-off-by: Hannes Reinecke <hare@suse.com>
Reviewed-by: Bart Van Assche <bart.vanassche@wdc.com>
Reviewed-by: Christoph Hellwig <hch@lst.de>
Reviewed-by: Eric Dumazet <edumazet@google.com>
Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

Before patch : 
 	list_for_each_entry(srp, &sfp >rq_list, entry) {
 		if (val > SG_MAX_QUEUE)
 			break;
 		memset(&rinfo[val], 0, SZ_SG_REQ_INFO);
 		rinfo[val].req_state = srp >done   1;
 		rinfo[val].problem =
 			srp >header.masked_status &
 		else {
 			sg_req_info_t *rinfo;
 
 			rinfo = kmalloc(SZ_SG_REQ_INFO * SG_MAX_QUEUE,
 								GFP_KERNEL);
 			if (!rinfo)
 				return  ENOMEM;
 			read_lock_irqsave(&sfp >rq_list_lock, iflags);
After patch : 
 	list_for_each_entry(srp, &sfp >rq_list, entry) {
 		if (val > SG_MAX_QUEUE)
 			break;
 		rinfo[val].req_state = srp >done   1;
 		rinfo[val].problem =
 			srp >header.masked_status &
 		else {
 			sg_req_info_t *rinfo;
 
 			rinfo = kzalloc(SZ_SG_REQ_INFO * SG_MAX_QUEUE,
 					GFP_KERNEL);
 			if (!rinfo)
 				return  ENOMEM;
 			read_lock_irqsave(&sfp >rq_list_lock, iflags);
