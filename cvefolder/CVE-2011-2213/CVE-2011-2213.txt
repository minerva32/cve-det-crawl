CVE Number : CVE-2011-2213
Commit Message : 
inet_diag: fix inet_diag_bc_audit()
Commit Details : 
A malicious user or buggy application can inject code and trigger an
infinite loop in inet_diag_bc_audit()

Also make sure each instruction is aligned on 4 bytes boundary, to avoid
unaligned accesses.

Reported-by: Dan Rosenberg <drosenberg@vsecurity.com>
Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com>
Signed-off-by: David S. Miller <davem@davemloft.net>

Before patch : 
 			return 0;
 		if (cc == len)
 			return 1;
 		if (op >yes < 4)
 			return 0;
 		len  = op >yes;
 		bc   = op >yes;
 
 static int inet_diag_bc_audit(const void *bytecode, int bytecode_len)
 {
 	const unsigned char *bc = bytecode;
 	int  len = bytecode_len;
 
 	while (len > 0) {
 		struct inet_diag_bc_op *op = (struct inet_diag_bc_op *)bc;
 
 //printk("BC: %d %d %d {%d} / %d\n", op >code, op >yes, op >no, op[1].no, len);
 		switch (op >code) {
 		case INET_DIAG_BC_S_LE:
 		case INET_DIAG_BC_D_GE:
 		case INET_DIAG_BC_D_LE:
 			if (op >yes < 4 || op >yes > len   4)
 				return  EINVAL;
 		case INET_DIAG_BC_JMP:
 			if (op >no < 4 || op >no > len   4)
 				return  EINVAL;
 			if (op >no < len &&
 			    !valid_cc(bytecode, bytecode_len, len   op >no))
 				return  EINVAL;
 			break;
 		case INET_DIAG_BC_NOP:
 			if (op >yes < 4 || op >yes > len   4)
 				return  EINVAL;
 			break;
 		default:
 			return  EINVAL;
 		}
 		bc   = op >yes;
 		len  = op >yes;
 	}
After patch : 
 			return 0;
 		if (cc == len)
 			return 1;
 		if (op >yes < 4 || op >yes & 3)
 			return 0;
 		len  = op >yes;
 		bc   = op >yes;
 
 static int inet_diag_bc_audit(const void *bytecode, int bytecode_len)
 {
 	const void *bc = bytecode;
 	int  len = bytecode_len;
 
 	while (len > 0) {
 		const struct inet_diag_bc_op *op = bc;
 
 //printk("BC: %d %d %d {%d} / %d\n", op >code, op >yes, op >no, op[1].no, len);
 		switch (op >code) {
 		case INET_DIAG_BC_S_LE:
 		case INET_DIAG_BC_D_GE:
 		case INET_DIAG_BC_D_LE:
 		case INET_DIAG_BC_JMP:
 			if (op >no < 4 || op >no > len   4 || op >no & 3)
 				return  EINVAL;
 			if (op >no < len &&
 			    !valid_cc(bytecode, bytecode_len, len   op >no))
 				return  EINVAL;
 			break;
 		case INET_DIAG_BC_NOP:
 			break;
 		default:
 			return  EINVAL;
 		}
 		if (op >yes < 4 || op >yes > len   4 || op >yes & 3)
 			return  EINVAL;
 		bc   = op >yes;
 		len  = op >yes;
 	}
