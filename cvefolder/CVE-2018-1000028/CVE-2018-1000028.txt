CVE Number : CVE-2018-1000028
Commit Message : 
nfsd: auth: Fix gid sorting when rootsquash enabled
Commit Details : 
Commit bdcf0a423ea1 ("kernel: make groups_sort calling a responsibility
group_info allocators") appears to break nfsd rootsquash in a pretty
major way.

It adds a call to groups_sort() inside the loop that copies/squashes
gids, which means the valid gids are sorted along with the following
garbage.  The net result is that the highest numbered valid gids are
replaced with any lower-valued garbage gids, possibly including 0.

We should sort only once, after filling in all the gids.

Fixes: bdcf0a423ea1 ("kernel: make groups_sort calling a responsibility ...")
Signed-off-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
Acked-by: J. Bruce Fields <bfields@redhat.com>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

Before patch : 
 				gi >gid[i] = exp >ex_anon_gid;
 			else
 				gi >gid[i] = rqgi >gid[i];
 
 			/* Each thread allocates its own gi, no race */
 			groups_sort(gi);
 		}
 	} else {
 		gi = get_group_info(rqgi);
 	}
After patch : 
 				gi >gid[i] = exp >ex_anon_gid;
 			else
 				gi >gid[i] = rqgi >gid[i];
 		}
 
 		/* Each thread allocates its own gi, no race */
 		groups_sort(gi);
 	} else {
 		gi = get_group_info(rqgi);
 	}
