CVE Number : CVE-2011-2491
Commit Message : 
NLM: Don't hang forever on NLM unlock requests
Commit Details : 
If the NLM daemon is killed on the NFS server, we can currently end up
hanging forever on an 'unlock' request, instead of aborting. Basically,
if the rpcbind request fails, or the server keeps returning garbage, we
really want to quit instead of retrying.

Tested-by: Vasily Averin <vvs@sw.ru>
Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
Cc: stable@kernel.org

Before patch : 
 
 	if (task >tk_status < 0) {
 		dprintk("lockd: unlock failed (err = %d)\n",  task >tk_status);
 		goto retry_rebind;
 	}
 	if (status == NLM_LCK_DENIED_GRACE_PERIOD) {
 		rpc_delay(task, NLMCLNT_GRACE_WAIT);
 #endif
 	unsigned char		tk_priority : 2,/* Task priority */
 				tk_garb_retry : 2,
 				tk_cred_retry : 2;
 };
 #define tk_xprt			tk_client >cl_xprt
 
 			status =  EOPNOTSUPP;
 			break;
 		}
 		rpc_delay(task, 3*HZ);
 		goto retry_timeout;
 	case  ETIMEDOUT:
 	/* Initialize retry counters */
 	task >tk_garb_retry = 2;
 	task >tk_cred_retry = 2;
 
 	task >tk_priority = task_setup_data >priority   RPC_PRIORITY_LOW;
 	task >tk_owner = current >tgid;
After patch : 
 
 	if (task >tk_status < 0) {
 		dprintk("lockd: unlock failed (err = %d)\n",  task >tk_status);
 		switch (task >tk_status) {
 		case  EACCES:
 		case  EIO:
 			goto die;
 		default:
 			goto retry_rebind;
 		}
 	}
 	if (status == NLM_LCK_DENIED_GRACE_PERIOD) {
 		rpc_delay(task, NLMCLNT_GRACE_WAIT);
 #endif
 	unsigned char		tk_priority : 2,/* Task priority */
 				tk_garb_retry : 2,
 				tk_cred_retry : 2,
 				tk_rebind_retry : 2;
 };
 #define tk_xprt			tk_client >cl_xprt
 
 			status =  EOPNOTSUPP;
 			break;
 		}
 		if (task >tk_rebind_retry == 0)
 			break;
 		task >tk_rebind_retry  ;
 		rpc_delay(task, 3*HZ);
 		goto retry_timeout;
 	case  ETIMEDOUT:
 	/* Initialize retry counters */
 	task >tk_garb_retry = 2;
 	task >tk_cred_retry = 2;
 	task >tk_rebind_retry = 2;
 
 	task >tk_priority = task_setup_data >priority   RPC_PRIORITY_LOW;
 	task >tk_owner = current >tgid;
