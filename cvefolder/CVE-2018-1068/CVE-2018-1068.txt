CVE Number : CVE-2018-1068
Commit Message : 
netfilter: ebtables: CONFIG_COMPAT: don't trust userland offsets
Commit Details : 
We need to make sure the offsets are not out of range of the
total size.
Also check that they are in ascending order.

The WARN_ON triggered by syzkaller (it sets panic_on_warn) is
changed to also bail out, no point in continuing parsing.

Briefly tested with simple ruleset of
-A INPUT --limit 1/s' --log
plus jump to custom chains using 32bit ebtables binary.

Reported-by: <syzbot+845a53d13171abf8bf29@syzkaller.appspotmail.com>
Signed-off-by: Florian Westphal <fw@strlen.de>
Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

Before patch : 
 		if (match_kern)
 			match_kern >match_size = ret;
 
 		WARN_ON(type == EBT_COMPAT_TARGET && size_left);
 		match32 = (struct compat_ebt_entry_mwt *) buf;
 	}
 
 	 *
 	 * offsets are relative to beginning of struct ebt_entry (i.e., 0).
 	 */
 	for (i = 0, j = 1 ; j < 4 ; j  , i  ) {
 		struct compat_ebt_entry_mwt *match32;
 		unsigned int size;
After patch : 
 		if (match_kern)
 			match_kern >match_size = ret;
 
 		if (WARN_ON(type == EBT_COMPAT_TARGET && size_left))
 			return  EINVAL;
 
 		match32 = (struct compat_ebt_entry_mwt *) buf;
 	}
 
 	 *
 	 * offsets are relative to beginning of struct ebt_entry (i.e., 0).
 	 */
 	for (i = 0; i < 4 ;   i) {
 		if (offsets[i] >= *total)
 			return  EINVAL;
 		if (i == 0)
 			continue;
 		if (offsets[i 1] > offsets[i])
 			return  EINVAL;
 	}
 
 	for (i = 0, j = 1 ; j < 4 ; j  , i  ) {
 		struct compat_ebt_entry_mwt *match32;
 		unsigned int size;
