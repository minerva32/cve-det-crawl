CVE Number : CVE-2019-9213
Commit Message : 
mm: enforce min addr even if capable() in expand_downwards()
Commit Details : 
security_mmap_addr() does a capability check with current_cred(), but
we can reach this code from contexts like a VFS write handler where
current_cred() must not be used.

This can be abused on systems without SMAP to make NULL pointer
dereferences exploitable again.

Fixes: 8869477a49c3 ("security: protect from stack expansion into low vm addresses")
Cc: stable@kernel.org
Signed-off-by: Jann Horn <jannh@google.com>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

Before patch : 
 {
 	struct mm_struct *mm = vma >vm_mm;
 	struct vm_area_struct *prev;
 	int error;
 
 	address &= PAGE_MASK;
 	error = security_mmap_addr(address);
 	if (error)
 		return error;
 
 	/* Enforce stack_guard_gap */
 	prev = vma >vm_prev;
After patch : 
 {
 	struct mm_struct *mm = vma >vm_mm;
 	struct vm_area_struct *prev;
 	int error = 0;
 
 	address &= PAGE_MASK;
 	if (address < mmap_min_addr)
 		return  EPERM;
 
 	/* Enforce stack_guard_gap */
 	prev = vma >vm_prev;
