CVE Number : CVE-2017-2671
Commit Message : 
ping: implement proper locking
Commit Details : 
We got a report of yet another bug in ping

http://www.openwall.com/lists/oss-security/2017/03/24/6

->disconnect() is not called with socket lock held.

Fix this by acquiring ping rwlock earlier.

Thanks to Daniel, Alexander and Andrey for letting us know this problem.

Fixes: c319b4d76b9e ("net: ipv4: add IPPROTO_ICMP socket kind")
Signed-off-by: Eric Dumazet <edumazet@google.com>
Reported-by: Daniel Jiang <danieljiang0415@gmail.com>
Reported-by: Solar Designer <solar@openwall.com>
Reported-by: Andrey Konovalov <andreyknvl@google.com>
Signed-off-by: David S. Miller <davem@davemloft.net>

Before patch : 
 void ping_unhash(struct sock *sk)
 {
 	struct inet_sock *isk = inet_sk(sk);
 	pr_debug("ping_unhash(isk=%p,isk >num=%u)\n", isk, isk >inet_num);
 	if (sk_hashed(sk)) {
 		write_lock_bh(&ping_table.lock);
 		hlist_nulls_del(&sk >sk_nulls_node);
 		sk_nulls_node_init(&sk >sk_nulls_node);
 		sock_put(sk);
 		isk >inet_num = 0;
 		isk >inet_sport = 0;
 		sock_prot_inuse_add(sock_net(sk), sk >sk_prot,  1);
 		write_unlock_bh(&ping_table.lock);
 	}
 }
 EXPORT_SYMBOL_GPL(ping_unhash);
 
After patch : 
 void ping_unhash(struct sock *sk)
 {
 	struct inet_sock *isk = inet_sk(sk);
 
 	pr_debug("ping_unhash(isk=%p,isk >num=%u)\n", isk, isk >inet_num);
 	write_lock_bh(&ping_table.lock);
 	if (sk_hashed(sk)) {
 		hlist_nulls_del(&sk >sk_nulls_node);
 		sk_nulls_node_init(&sk >sk_nulls_node);
 		sock_put(sk);
 		isk >inet_num = 0;
 		isk >inet_sport = 0;
 		sock_prot_inuse_add(sock_net(sk), sk >sk_prot,  1);
 	}
 	write_unlock_bh(&ping_table.lock);
 }
 EXPORT_SYMBOL_GPL(ping_unhash);
 
