CVE Number : CVE-2016-6198
Commit Message : 
vfs: rename: check backing inode being equal
Commit Details : 
If a file is renamed to a hardlink of itself POSIX specifies that rename(2)
should do nothing and return success.

This condition is checked in vfs_rename().  However it won't detect hard
links on overlayfs where these are given separate inodes on the overlayfs
layer.

Overlayfs itself detects this condition and returns success without doing
anything, but then vfs_rename() will proceed as if this was a successful
rename (detach_mounts(), d_move()).

The correct thing to do is to detect this condition before even calling
into overlayfs.  This patch does this by calling vfs_select_inode() to get
the underlying inodes.

Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
Cc: <stable@vger.kernel.org> # v4.2+

Before patch : 
 	bool new_is_dir = false;
 	unsigned max_links = new_dir >i_sb >s_max_links;
 
 	if (source == target)
 		return 0;
 
 	error = may_delete(old_dir, old_dentry, is_dir);
After patch : 
 	bool new_is_dir = false;
 	unsigned max_links = new_dir >i_sb >s_max_links;
 
 	/*
 	 * Check source == target.
 	 * On overlayfs need to look at underlying inodes.
 	 */
 	if (vfs_select_inode(old_dentry, 0) == vfs_select_inode(new_dentry, 0))
 		return 0;
 
 	error = may_delete(old_dir, old_dentry, is_dir);
