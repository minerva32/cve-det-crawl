CVE Number : CVE-2010-3876
Commit Message : 
net: packet: fix information leak to userland
Commit Details : 
packet_getname_spkt() doesn't initialize all members of sa_data field of
sockaddr struct if strlen(dev->name) < 13.  This structure is then copied
to userland.  It leads to leaking of contents of kernel stack memory.
We have to fully fill sa_data with strncpy() instead of strlcpy().

The same with packet_getname(): it doesn't initialize sll_pkttype field of
sockaddr_ll.  Set it to zero.

Signed-off-by: Vasiliy Kulikov <segooon@gmail.com>
Signed-off-by: David S. Miller <davem@davemloft.net>

Before patch : 
 	rcu_read_lock();
 	dev = dev_get_by_index_rcu(sock_net(sk), pkt_sk(sk) >ifindex);
 	if (dev)
 		strlcpy(uaddr >sa_data, dev >name, 15);
 	else
 		memset(uaddr >sa_data, 0, 14);
 	rcu_read_unlock();
 	sll >sll_family = AF_PACKET;
 	sll >sll_ifindex = po >ifindex;
 	sll >sll_protocol = po >num;
 	rcu_read_lock();
 	dev = dev_get_by_index_rcu(sock_net(sk), po >ifindex);
 	if (dev) {
After patch : 
 	rcu_read_lock();
 	dev = dev_get_by_index_rcu(sock_net(sk), pkt_sk(sk) >ifindex);
 	if (dev)
 		strncpy(uaddr >sa_data, dev >name, 14);
 	else
 		memset(uaddr >sa_data, 0, 14);
 	rcu_read_unlock();
 	sll >sll_family = AF_PACKET;
 	sll >sll_ifindex = po >ifindex;
 	sll >sll_protocol = po >num;
 	sll >sll_pkttype = 0;
 	rcu_read_lock();
 	dev = dev_get_by_index_rcu(sock_net(sk), po >ifindex);
 	if (dev) {
