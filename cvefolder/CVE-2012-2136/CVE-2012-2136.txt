CVE Number : CVE-2012-2136
Commit Message : 
net: sock: validate data_len before allocating skb in sock_alloc_send_pskb()
Commit Details : 
We need to validate the number of pages consumed by data_len, otherwise frags
array could be overflowed by userspace. So this patch validate data_len and
return -EMSGSIZE when data_len may occupies more frags than MAX_SKB_FRAGS.

Signed-off-by: Jason Wang <jasowang@redhat.com>
Signed-off-by: David S. Miller <davem@davemloft.net>

Before patch : 
 	gfp_t gfp_mask;
 	long timeo;
 	int err;
 
 	gfp_mask = sk >sk_allocation;
 	if (gfp_mask & __GFP_WAIT)
 		if (atomic_read(&sk >sk_wmem_alloc) < sk >sk_sndbuf) {
 			skb = alloc_skb(header_len, gfp_mask);
 			if (skb) {
 				int npages;
 				int i;
 
 				/* No pages, we're done... */
 				if (!data_len)
 					break;
 
 				npages = (data_len   (PAGE_SIZE   1)) >> PAGE_SHIFT;
 				skb >truesize  = data_len;
 				skb_shinfo(skb) >nr_frags = npages;
 				for (i = 0; i < npages; i  ) {
After patch : 
 	gfp_t gfp_mask;
 	long timeo;
 	int err;
 	int npages = (data_len   (PAGE_SIZE   1)) >> PAGE_SHIFT;
 
 	err =  EMSGSIZE;
 	if (npages > MAX_SKB_FRAGS)
 		goto failure;
 
 	gfp_mask = sk >sk_allocation;
 	if (gfp_mask & __GFP_WAIT)
 		if (atomic_read(&sk >sk_wmem_alloc) < sk >sk_sndbuf) {
 			skb = alloc_skb(header_len, gfp_mask);
 			if (skb) {
 				int i;
 
 				/* No pages, we're done... */
 				if (!data_len)
 					break;
 
 				skb >truesize  = data_len;
 				skb_shinfo(skb) >nr_frags = npages;
 				for (i = 0; i < npages; i  ) {
