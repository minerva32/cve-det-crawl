CVE Number : CVE-2019-15216
Commit Message : 
USB: yurex: Fix protection fault after device removal
Commit Details : 
The syzkaller USB fuzzer found a general-protection-fault bug in the
yurex driver.  The fault occurs when a device has been unplugged; the
driver's interrupt-URB handler logs an error message referring to the
device by name, after the device has been unregistered and its name
deallocated.

This problem is caused by the fact that the interrupt URB isn't
cancelled until the driver's private data structure is released, which
can happen long after the device is gone.  The cure is to make sure
that the interrupt URB is killed before yurex_disconnect() returns;
this is exactly the sort of thing that usb_poison_urb() was meant for.

Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
Reported-and-tested-by: syzbot+2eb9121678bdb36e6d57@syzkaller.appspotmail.com
CC: <stable@vger.kernel.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

Before patch : 
 	usb_deregister_dev(interface, &yurex_class);
 
 	/* prevent more I/O from starting */
 	mutex_lock(&dev >io_mutex);
 	dev >interface = NULL;
 	mutex_unlock(&dev >io_mutex);
After patch : 
 	usb_deregister_dev(interface, &yurex_class);
 
 	/* prevent more I/O from starting */
 	usb_poison_urb(dev >urb);
 	mutex_lock(&dev >io_mutex);
 	dev >interface = NULL;
 	mutex_unlock(&dev >io_mutex);
