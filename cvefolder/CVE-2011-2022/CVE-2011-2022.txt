CVE Number : CVE-2011-2022
Commit Message : 
agp: fix arbitrary kernel memory writes
Commit Details : 
pg_start is copied from userspace on AGPIOC_BIND and AGPIOC_UNBIND ioctl
cmds of agp_ioctl() and passed to agpioc_bind_wrap().  As said in the
comment, (pg_start + mem->page_count) may wrap in case of AGPIOC_BIND,
and it is not checked at all in case of AGPIOC_UNBIND.  As a result, user
with sufficient privileges (usually "video" group) may generate either
local DoS or privilege escalation.

Signed-off-by: Vasiliy Kulikov <segoon@openwall.com>
Signed-off-by: Dave Airlie <airlied@redhat.com>

Before patch : 
 		return  EINVAL;
 	}
 
 	/* AK: could wrap */
 	if ((pg_start   mem >page_count) > num_entries)
 		return  EINVAL;
 
 	j = pg_start;
 {
 	size_t i;
 	struct agp_bridge_data *bridge;
 	int mask_type;
 
 	bridge = mem >bridge;
 	if (!bridge)
 	if (type != mem >type)
 		return  EINVAL;
 
 	mask_type = bridge >driver >agp_type_to_mask_type(bridge, type);
 	if (mask_type != 0) {
 		/* The generic routines know nothing of memory types */
After patch : 
 		return  EINVAL;
 	}
 
 	if (((pg_start   mem >page_count) > num_entries) ||
 	    ((pg_start   mem >page_count) < pg_start))
 		return  EINVAL;
 
 	j = pg_start;
 {
 	size_t i;
 	struct agp_bridge_data *bridge;
 	int mask_type, num_entries;
 
 	bridge = mem >bridge;
 	if (!bridge)
 	if (type != mem >type)
 		return  EINVAL;
 
 	num_entries = agp_num_entries();
 	if (((pg_start   mem >page_count) > num_entries) ||
 	    ((pg_start   mem >page_count) < pg_start))
 		return  EINVAL;
 
 	mask_type = bridge >driver >agp_type_to_mask_type(bridge, type);
 	if (mask_type != 0) {
 		/* The generic routines know nothing of memory types */
