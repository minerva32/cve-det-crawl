CVE Number : CVE-2009-2691
Commit Message : 
mm_for_maps: shift down_read(mmap_sem) to the caller
Commit Details : 
mm_for_maps() takes ->mmap_sem after security checks, this looks
strange and obfuscates the locking rules. Move this lock to its
single caller, m_start().

Signed-off-by: Oleg Nesterov <oleg@redhat.com>
Acked-by: Serge Hallyn <serue@us.ibm.com>
Signed-off-by: James Morris <jmorris@namei.org>

Before patch : 
 struct mm_struct *mm_for_maps(struct task_struct *task)
 {
 	struct mm_struct *mm = get_task_mm(task);
 	if (!mm)
 		return NULL;
 	if (mm != current >mm) {
 		/*
 		 * task >mm can be changed before security check,
 		 * in that case we must notice the change after.
 		if (!ptrace_may_access(task, PTRACE_MODE_READ) ||
 		    mm != task >mm) {
 			mmput(mm);
 			return NULL;
 		}
 	}
 	down_read(&mm >mmap_sem);
 	return mm;
 }
 
 	mm = mm_for_maps(priv >task);
 	if (!mm)
 		return NULL;
 
 	tail_vma = get_gate_vma(priv >task);
 	priv >tail_vma = tail_vma;
 		priv >task = NULL;
 		return NULL;
 	}
 
 	/* start from the Nth VMA */
 	for (p = rb_first(&mm >mm_rb); p; p = rb_next(p))
After patch : 
 struct mm_struct *mm_for_maps(struct task_struct *task)
 {
 	struct mm_struct *mm = get_task_mm(task);
 
 	if (mm && mm != current >mm) {
 		/*
 		 * task >mm can be changed before security check,
 		 * in that case we must notice the change after.
 		if (!ptrace_may_access(task, PTRACE_MODE_READ) ||
 		    mm != task >mm) {
 			mmput(mm);
 			mm = NULL;
 		}
 	}
 	return mm;
 }
 
 	mm = mm_for_maps(priv >task);
 	if (!mm)
 		return NULL;
 	down_read(&mm >mmap_sem);
 
 	tail_vma = get_gate_vma(priv >task);
 	priv >tail_vma = tail_vma;
 		priv >task = NULL;
 		return NULL;
 	}
 	down_read(&mm >mmap_sem);
 
 	/* start from the Nth VMA */
 	for (p = rb_first(&mm >mm_rb); p; p = rb_next(p))
