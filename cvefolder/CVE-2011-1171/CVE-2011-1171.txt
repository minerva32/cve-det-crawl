CVE Number : CVE-2011-1171
Commit Message : 
netfilter: ip_tables: fix infoleak to userspace
Commit Details : 
Structures ipt_replace, compat_ipt_replace, and xt_get_revision are
copied from userspace.  Fields of these structs that are
zero-terminated strings are not checked.  When they are used as argument
to a format string containing "%s" in request_module(), some sensitive
information is leaked to userspace via argument of spawned modprobe
process.

The first and the third bugs were introduced before the git epoch; the
second was introduced in 2722971c (v2.6.17-rc1).  To trigger the bug
one should have CAP_NET_ADMIN.

Signed-off-by: Vasiliy Kulikov <segoon@openwall.com>
Signed-off-by: Patrick McHardy <kaber@trash.net>

Before patch : 
 	/* overflow check */
 	if (tmp.num_counters >= INT_MAX / sizeof(struct xt_counters))
 		return  ENOMEM;
 
 	newinfo = xt_alloc_table_info(tmp.size);
 	if (!newinfo)
 		return  ENOMEM;
 	if (tmp.num_counters >= INT_MAX / sizeof(struct xt_counters))
 		return  ENOMEM;
 
 	newinfo = xt_alloc_table_info(tmp.size);
 	if (!newinfo)
 			ret =  EFAULT;
 			break;
 		}
 
 		if (cmd == IPT_SO_GET_REVISION_TARGET)
 			target = 1;
After patch : 
 	/* overflow check */
 	if (tmp.num_counters >= INT_MAX / sizeof(struct xt_counters))
 		return  ENOMEM;
 	tmp.name[sizeof(tmp.name) 1] = 0;
 
 	newinfo = xt_alloc_table_info(tmp.size);
 	if (!newinfo)
 		return  ENOMEM;
 	if (tmp.num_counters >= INT_MAX / sizeof(struct xt_counters))
 		return  ENOMEM;
 	tmp.name[sizeof(tmp.name) 1] = 0;
 
 	newinfo = xt_alloc_table_info(tmp.size);
 	if (!newinfo)
 			ret =  EFAULT;
 			break;
 		}
 		rev.name[sizeof(rev.name) 1] = 0;
 
 		if (cmd == IPT_SO_GET_REVISION_TARGET)
 			target = 1;
