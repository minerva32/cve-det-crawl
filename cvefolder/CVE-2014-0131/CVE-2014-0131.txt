CVE Number : CVE-2014-0131
Commit Message : 
skbuff: skb_segment: orphan frags before copying
Commit Details : 
skb_segment copies frags around, so we need
to copy them carefully to avoid accessing
user memory after reporting completion to userspace
through a callback.

skb_segment doesn't normally happen on datapath:
TSO needs to be disabled - so disabling zero copy
in this case does not look like a big deal.

Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
Acked-by: Herbert Xu <herbert@gondor.apana.org.au>
Signed-off-by: David S. Miller <davem@davemloft.net>

Before patch : 
 	skb_frag_t *frag = skb_shinfo(head_skb) >frags;
 	unsigned int mss = skb_shinfo(head_skb) >gso_size;
 	unsigned int doffset = head_skb >data   skb_mac_header(head_skb);
 	unsigned int offset = doffset;
 	unsigned int tnl_hlen = skb_tnl_header_len(head_skb);
 	unsigned int headroom;
 			i = 0;
 			nfrags = skb_shinfo(list_skb) >nr_frags;
 			frag = skb_shinfo(list_skb) >frags;
 			pos  = skb_headlen(list_skb);
 
 			while (pos < offset   len) {
 				i = 0;
 				nfrags = skb_shinfo(list_skb) >nr_frags;
 				frag = skb_shinfo(list_skb) >frags;
 
 				BUG_ON(!nfrags);
 
 				goto err;
 			}
 
 			*nskb_frag = *frag;
 			__skb_frag_ref(nskb_frag);
 			size = skb_frag_size(nskb_frag);
After patch : 
 	skb_frag_t *frag = skb_shinfo(head_skb) >frags;
 	unsigned int mss = skb_shinfo(head_skb) >gso_size;
 	unsigned int doffset = head_skb >data   skb_mac_header(head_skb);
 	struct sk_buff *frag_skb = head_skb;
 	unsigned int offset = doffset;
 	unsigned int tnl_hlen = skb_tnl_header_len(head_skb);
 	unsigned int headroom;
 			i = 0;
 			nfrags = skb_shinfo(list_skb) >nr_frags;
 			frag = skb_shinfo(list_skb) >frags;
 			frag_skb = list_skb;
 			pos  = skb_headlen(list_skb);
 
 			while (pos < offset   len) {
 				i = 0;
 				nfrags = skb_shinfo(list_skb) >nr_frags;
 				frag = skb_shinfo(list_skb) >frags;
 				frag_skb = list_skb;
 
 				BUG_ON(!nfrags);
 
 				goto err;
 			}
 
 			if (unlikely(skb_orphan_frags(frag_skb, GFP_ATOMIC)))
 				goto err;
 
 			*nskb_frag = *frag;
 			__skb_frag_ref(nskb_frag);
 			size = skb_frag_size(nskb_frag);
