CVE Number : CVE-2013-4514
Commit Message : 
staging: wlags49_h2: buffer overflow setting station name
Commit Details : 
We need to check the length parameter before doing the memcpy().  I've
actually changed it to strlcpy() as well so that it's NUL terminated.

You need CAP_NET_ADMIN to trigger these so it's not the end of the
world.

Reported-by: Nico Golde <nico@ngolde.de>
Reported-by: Fabian Yamaguchi <fabs@goesec.de>
Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
Cc: stable@kernel.org
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

Before patch : 
 	ltv_t                   *pLtv;
 	bool_t                  ltvAllocated = FALSE;
 	ENCSTRCT                sEncryption;
 
 #ifdef USE_WDS
 	hcf_16                  hcfPort  = HCF_PORT_0;
 					break;
 				case CFG_CNF_OWN_NAME:
 					memset(lp >StationName, 0, sizeof(lp >StationName));
 					memcpy((void *)lp >StationName, (void *)&pLtv >u.u8[2], (size_t)pLtv >u.u16[0]);
 					pLtv >u.u16[0] = CNV_INT_TO_LITTLE(pLtv >u.u16[0]);
 					break;
 				case CFG_CNF_LOAD_BALANCING:
 {
 	struct wl_private *lp = wl_priv(dev);
 	unsigned long flags;
 	int         ret = 0;
 	/*                                                                        */
 
 	wl_lock(lp, &flags);
 
 	memset(lp >StationName, 0, sizeof(lp >StationName));
 
 	memcpy(lp >StationName, extra, wrqu >data.length);
 
 	/* Commit the adapter parameters */
 	wl_apply(lp);
After patch : 
 	ltv_t                   *pLtv;
 	bool_t                  ltvAllocated = FALSE;
 	ENCSTRCT                sEncryption;
 	size_t			len;
 
 #ifdef USE_WDS
 	hcf_16                  hcfPort  = HCF_PORT_0;
 					break;
 				case CFG_CNF_OWN_NAME:
 					memset(lp >StationName, 0, sizeof(lp >StationName));
 					len = min_t(size_t, pLtv >u.u16[0], sizeof(lp >StationName));
 					strlcpy(lp >StationName, &pLtv >u.u8[2], len);
 					pLtv >u.u16[0] = CNV_INT_TO_LITTLE(pLtv >u.u16[0]);
 					break;
 				case CFG_CNF_LOAD_BALANCING:
 {
 	struct wl_private *lp = wl_priv(dev);
 	unsigned long flags;
 	size_t len;
 	int         ret = 0;
 	/*                                                                        */
 
 	wl_lock(lp, &flags);
 
 	memset(lp >StationName, 0, sizeof(lp >StationName));
 	len = min_t(size_t, wrqu >data.length, sizeof(lp >StationName));
 	strlcpy(lp >StationName, extra, len);
 
 	/* Commit the adapter parameters */
 	wl_apply(lp);
