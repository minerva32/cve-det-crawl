CVE Number : CVE-2019-15927
Commit Message : 
ALSA: usb-audio: Avoid access before bLength check in build_audio_procunit()
Commit Details : 
The parser for the processing unit reads bNrInPins field before the
bLength sanity check, which may lead to an out-of-bound access when a
malformed descriptor is given.  Fix it by assignment after the bLength
check.

Cc: <stable@vger.kernel.org>
Signed-off-by: Takashi Iwai <tiwai@suse.de>

Before patch : 
 				char *name)
 {
 	struct uac_processing_unit_descriptor *desc = raw_desc;
 	int num_ins = desc >bNrInPins;
 	struct usb_mixer_elem_info *cval;
 	struct snd_kcontrol *kctl;
 	int i, err, nameid, type, len;
 		0, NULL, default_value_info
 	};
 
 	if (desc >bLength < 13 || desc >bLength < 13   num_ins ||
 	    desc >bLength < num_ins   uac_processing_unit_bControlSize(desc, state >mixer >protocol)) {
 		usb_audio_err(state >chip, "invalid %s descriptor (id %d)\n", name, unitid);
 		return  EINVAL;
After patch : 
 				char *name)
 {
 	struct uac_processing_unit_descriptor *desc = raw_desc;
 	int num_ins;
 	struct usb_mixer_elem_info *cval;
 	struct snd_kcontrol *kctl;
 	int i, err, nameid, type, len;
 		0, NULL, default_value_info
 	};
 
 	if (desc >bLength < 13) {
 		usb_audio_err(state >chip, "invalid %s descriptor (id %d)\n", name, unitid);
 		return  EINVAL;
 	}
 
 	num_ins = desc >bNrInPins;
 	if (desc >bLength < 13   num_ins ||
 	    desc >bLength < num_ins   uac_processing_unit_bControlSize(desc, state >mixer >protocol)) {
 		usb_audio_err(state >chip, "invalid %s descriptor (id %d)\n", name, unitid);
 		return  EINVAL;
