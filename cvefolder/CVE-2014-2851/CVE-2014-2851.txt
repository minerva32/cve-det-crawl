CVE Number : CVE-2014-2851
Commit Message : 
net: ipv4: current group_info should be put after using.
Commit Details : 
Plug a group_info refcount leak in ping_init.
group_info is only needed during initialization and
the code failed to release the reference on exit.
While here move grabbing the reference to a place
where it is actually needed.

Signed-off-by: Chuansheng Liu <chuansheng.liu@intel.com>
Signed-off-by: Zhang Dongxing <dongxing.zhang@intel.com>
Signed-off-by: xiaoming wang <xiaoming.wang@intel.com>
Signed-off-by: David S. Miller <davem@davemloft.net>

Before patch : 
 {
 	struct net *net = sock_net(sk);
 	kgid_t group = current_egid();
 	struct group_info *group_info = get_current_groups();
 	int i, j, count = group_info >ngroups;
 	kgid_t low, high;
 
 	inet_get_ping_group_range_net(net, &low, &high);
 	if (gid_lte(low, group) && gid_lte(group, high))
 		return 0;
 
 	for (i = 0; i < group_info >nblocks; i  ) {
 		int cp_count = min_t(int, NGROUPS_PER_BLOCK, count);
 		for (j = 0; j < cp_count; j  ) {
 			kgid_t gid = group_info >blocks[i][j];
 			if (gid_lte(low, gid) && gid_lte(gid, high))
 				return 0;
 		}
 
 		count  = cp_count;
 	}
 
 	return  EACCES;
 }
 EXPORT_SYMBOL_GPL(ping_init_sock);
 
After patch : 
 {
 	struct net *net = sock_net(sk);
 	kgid_t group = current_egid();
 	struct group_info *group_info;
 	int i, j, count;
 	kgid_t low, high;
 	int ret = 0;
 
 	inet_get_ping_group_range_net(net, &low, &high);
 	if (gid_lte(low, group) && gid_lte(group, high))
 		return 0;
 
 	group_info = get_current_groups();
 	count = group_info >ngroups;
 	for (i = 0; i < group_info >nblocks; i  ) {
 		int cp_count = min_t(int, NGROUPS_PER_BLOCK, count);
 		for (j = 0; j < cp_count; j  ) {
 			kgid_t gid = group_info >blocks[i][j];
 			if (gid_lte(low, gid) && gid_lte(gid, high))
 				goto out_release_group;
 		}
 
 		count  = cp_count;
 	}
 
 	ret =  EACCES;
 
 out_release_group:
 	put_group_info(group_info);
 	return ret;
 }
 EXPORT_SYMBOL_GPL(ping_init_sock);
 
