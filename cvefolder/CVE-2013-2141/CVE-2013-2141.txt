CVE Number : CVE-2013-2141
Commit Message : 
kernel/signal.c: stop info leak via the tkill and the tgkill syscalls
Commit Details : 
This fixes a kernel memory contents leak via the tkill and tgkill syscalls
for compat processes.

This is visible in the siginfo_t->_sifields._rt.si_sigval.sival_ptr field
when handling signals delivered from tkill.

The place of the infoleak:

int copy_siginfo_to_user32(compat_siginfo_t __user *to, siginfo_t *from)
{
        ...
        put_user_ex(ptr_to_compat(from->si_ptr), &to->si_ptr);
        ...
}

Signed-off-by: Emese Revfy <re.emese@gmail.com>
Reviewed-by: PaX Team <pageexec@freemail.hu>
Signed-off-by: Kees Cook <keescook@chromium.org>
Cc: Al Viro <viro@zeniv.linux.org.uk>
Cc: Oleg Nesterov <oleg@redhat.com>
Cc: "Eric W. Biederman" <ebiederm@xmission.com>
Cc: Serge Hallyn <serge.hallyn@canonical.com>
Cc: <stable@vger.kernel.org>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

Before patch : 
 
 static int do_tkill(pid_t tgid, pid_t pid, int sig)
 {
 	struct siginfo info;
 
 	info.si_signo = sig;
 	info.si_errno = 0;
After patch : 
 
 static int do_tkill(pid_t tgid, pid_t pid, int sig)
 {
 	struct siginfo info = {};
 
 	info.si_signo = sig;
 	info.si_errno = 0;
