CVE Number : CVE-2015-7509
Commit Message : 
ext4: make orphan functions be no-op in no-journal mode
Commit Details : 
Instead of checking whether the handle is valid, we check if journal
is enabled. This avoids taking the s_orphan_lock mutex in all cases
when there is no journal in use, including the error paths where
ext4_orphan_del() is called with a handle set to NULL.

Signed-off-by: Anatol Pomozov <anatol.pomozov@gmail.com>
Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>

Before patch : 
 	struct ext4_iloc iloc;
 	int err = 0, rc;
 
 	if (!ext4_handle_valid(handle))
 		return 0;
 
 	mutex_lock(&EXT4_SB(sb) >s_orphan_lock);
 	struct ext4_iloc iloc;
 	int err = 0;
 
 	/* ext4_handle_valid() assumes a valid handle_t pointer */
 	if (handle && !ext4_handle_valid(handle))
 		return 0;
 
 	mutex_lock(&EXT4_SB(inode >i_sb) >s_orphan_lock);
 	 * transaction handle with which to update the orphan list on
 	 * disk, but we still need to remove the inode from the linked
 	 * list in memory. */
 	if (sbi >s_journal && !handle)
 		goto out;
 
 	err = ext4_reserve_inode_write(handle, inode, &iloc);
After patch : 
 	struct ext4_iloc iloc;
 	int err = 0, rc;
 
 	if (!EXT4_SB(sb) >s_journal)
 		return 0;
 
 	mutex_lock(&EXT4_SB(sb) >s_orphan_lock);
 	struct ext4_iloc iloc;
 	int err = 0;
 
 	if (!EXT4_SB(inode >i_sb) >s_journal)
 		return 0;
 
 	mutex_lock(&EXT4_SB(inode >i_sb) >s_orphan_lock);
 	 * transaction handle with which to update the orphan list on
 	 * disk, but we still need to remove the inode from the linked
 	 * list in memory. */
 	if (!handle)
 		goto out;
 
 	err = ext4_reserve_inode_write(handle, inode, &iloc);
