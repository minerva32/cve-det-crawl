CVE Number : CVE-2013-3236
Commit Message : 
VSOCK: vmci - fix possible info leak in vmci_transport_dgram_dequeue()
Commit Details : 
In case we received no data on the call to skb_recv_datagram(), i.e.
skb->data is NULL, vmci_transport_dgram_dequeue() will return with 0
without updating msg_namelen leading to net/socket.c leaking the local,
uninitialized sockaddr_storage variable to userland -- 128 bytes of
kernel stack memory.

Fix this by moving the already existing msg_namelen assignment a few
lines above.

Cc: Andy King <acking@vmware.com>
Cc: Dmitry Torokhov <dtor@vmware.com>
Cc: George Zhang <georgezhang@vmware.com>
Signed-off-by: Mathias Krause <minipli@googlemail.com>
Signed-off-by: David S. Miller <davem@davemloft.net>

Before patch : 
 	if (flags & MSG_OOB || flags & MSG_ERRQUEUE)
 		return  EOPNOTSUPP;
 
 	/* Retrieve the head sk_buff from the socket's receive queue. */
 	err = 0;
 	skb = skb_recv_datagram(&vsk >sk, flags, noblock, &err);
 	if (err)
 		goto out;
 
 	msg >msg_namelen = 0;
 	if (msg >msg_name) {
 		struct sockaddr_vm *vm_addr;
 
After patch : 
 	if (flags & MSG_OOB || flags & MSG_ERRQUEUE)
 		return  EOPNOTSUPP;
 
 	msg >msg_namelen = 0;
 
 	/* Retrieve the head sk_buff from the socket's receive queue. */
 	err = 0;
 	skb = skb_recv_datagram(&vsk >sk, flags, noblock, &err);
 	if (err)
 		goto out;
 
 	if (msg >msg_name) {
 		struct sockaddr_vm *vm_addr;
 
