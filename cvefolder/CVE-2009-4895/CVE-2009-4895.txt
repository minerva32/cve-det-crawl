CVE Number : CVE-2009-4895
Commit Message : 
tty: fix race in tty_fasync
Commit Details : 
We need to keep the lock held over the call to __f_setown() to
prevent a PID race.

Thanks to Al Viro for pointing out the problem, and to Travis for
making us look here in the first place.

Cc: Eric W. Biederman <ebiederm@xmission.com>
Cc: Al Viro <viro@ZenIV.linux.org.uk>
Cc: Alan Cox <alan@lxorguk.ukuu.org.uk>
Cc: Linus Torvalds <torvalds@linux-foundation.org>
Cc: Tavis Ormandy <taviso@google.com>
Cc: Jeff Dike <jdike@addtoit.com>
Cc: Julien Tinnes <jln@google.com>
Cc: Matt Mackall <mpm@selenic.com>
Cc: stable <stable@kernel.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

Before patch : 
 			pid = task_pid(current);
 			type = PIDTYPE_PID;
 		}
 		spin_unlock_irqrestore(&tty >ctrl_lock, flags);
 		retval = __f_setown(filp, pid, type, 0);
 		if (retval)
 			goto out;
 	} else {
After patch : 
 			pid = task_pid(current);
 			type = PIDTYPE_PID;
 		}
 		retval = __f_setown(filp, pid, type, 0);
 		spin_unlock_irqrestore(&tty >ctrl_lock, flags);
 		if (retval)
 			goto out;
 	} else {
