CVE Number : CVE-2014-8133
Commit Message : 
x86/tls: Validate TLS entries to protect espfix
Commit Details : 
Installing a 16-bit RW data segment into the GDT defeats espfix.
AFAICT this will not affect glibc, Wine, or dosemu at all.

Signed-off-by: Andy Lutomirski <luto@amacapital.net>
Acked-by: H. Peter Anvin <hpa@zytor.com>
Cc: stable@vger.kernel.org
Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
Cc: Linus Torvalds <torvalds@linux-foundation.org>
Cc: security@kernel.org <security@kernel.org>
Cc: Willy Tarreau <w@1wt.eu>
Signed-off-by: Ingo Molnar <mingo@kernel.org>

Before patch : 
 	return  ESRCH;
 }
 
 static void set_tls_desc(struct task_struct *p, int idx,
 			 const struct user_desc *info, int n)
 {
 	if (copy_from_user(&info, u_info, sizeof(info)))
 		return  EFAULT;
 
 	if (idx ==  1)
 		idx = info.entry_number;
 
 {
 	struct user_desc infobuf[GDT_ENTRY_TLS_ENTRIES];
 	const struct user_desc *info;
 
 	if (pos >= GDT_ENTRY_TLS_ENTRIES * sizeof(struct user_desc) ||
 	    (pos % sizeof(struct user_desc)) != 0 ||
 	else
 		info = infobuf;
 
 	set_tls_desc(target,
 		     GDT_ENTRY_TLS_MIN   (pos / sizeof(struct user_desc)),
 		     info, count / sizeof(struct user_desc));
After patch : 
 	return  ESRCH;
 }
 
 static bool tls_desc_okay(const struct user_desc *info)
 {
 	if (LDT_empty(info))
 		return true;
 
 	/*
 	 * espfix is required for 16 bit data segments, but espfix
 	 * only works for LDT segments.
 	 */
 	if (!info >seg_32bit)
 		return false;
 
 	return true;
 }
 
 static void set_tls_desc(struct task_struct *p, int idx,
 			 const struct user_desc *info, int n)
 {
 	if (copy_from_user(&info, u_info, sizeof(info)))
 		return  EFAULT;
 
 	if (!tls_desc_okay(&info))
 		return  EINVAL;
 
 	if (idx ==  1)
 		idx = info.entry_number;
 
 {
 	struct user_desc infobuf[GDT_ENTRY_TLS_ENTRIES];
 	const struct user_desc *info;
 	int i;
 
 	if (pos >= GDT_ENTRY_TLS_ENTRIES * sizeof(struct user_desc) ||
 	    (pos % sizeof(struct user_desc)) != 0 ||
 	else
 		info = infobuf;
 
 	for (i = 0; i < count / sizeof(struct user_desc); i  )
 		if (!tls_desc_okay(info   i))
 			return  EINVAL;
 
 	set_tls_desc(target,
 		     GDT_ENTRY_TLS_MIN   (pos / sizeof(struct user_desc)),
 		     info, count / sizeof(struct user_desc));
