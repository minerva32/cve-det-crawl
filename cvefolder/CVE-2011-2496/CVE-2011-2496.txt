CVE Number : CVE-2011-2496
Commit Message : 
mm: avoid wrapping vm_pgoff in mremap()
Commit Details : 
The normal mmap paths all avoid creating a mapping where the pgoff
inside the mapping could wrap around due to overflow.  However, an
expanding mremap() can take such a non-wrapping mapping and make it
bigger and cause a wrapping condition.

Noticed by Robert Swiecki when running a system call fuzzer, where it
caused a BUG_ON() due to terminally confusing the vma_prio_tree code.  A
vma dumping patch by Hugh then pinpointed the crazy wrapped case.

Reported-and-tested-by: Robert Swiecki <robert@swiecki.net>
Acked-by: Hugh Dickins <hughd@google.com>
Cc: stable@kernel.org
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

Before patch : 
 	if (old_len > vma >vm_end   addr)
 		goto Efault;
 
 	if (vma >vm_flags & (VM_DONTEXPAND | VM_PFNMAP)) {
 		if (new_len > old_len)
 			goto Efault;
 	}
 
 	if (vma >vm_flags & VM_LOCKED) {
After patch : 
 	if (old_len > vma >vm_end   addr)
 		goto Efault;
 
 	/* Need to be careful about a growing mapping */
 	if (new_len > old_len) {
 		unsigned long pgoff;
 
 		if (vma >vm_flags & (VM_DONTEXPAND | VM_PFNMAP))
 			goto Efault;
 		pgoff = (addr   vma >vm_start) >> PAGE_SHIFT;
 		pgoff  = vma >vm_pgoff;
 		if (pgoff   (new_len >> PAGE_SHIFT) < pgoff)
 			goto Einval;
 	}
 
 	if (vma >vm_flags & VM_LOCKED) {
