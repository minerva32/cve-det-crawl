CVE Number : CVE-2014-9715
Commit Message : 
netfilter: nf_conntrack: reserve two bytes for nf_ct_ext->len
Commit Details : 
"len" contains sizeof(nf_ct_ext) and size of extensions. In a worst
case it can contain all extensions. Bellow you can find sizes for all
types of extensions. Their sum is definitely bigger than 256.

nf_ct_ext_types0->len = 24
nf_ct_ext_types1->len = 32
nf_ct_ext_types2->len = 24
nf_ct_ext_types3->len = 32
nf_ct_ext_types4->len = 152
nf_ct_ext_types5->len = 2
nf_ct_ext_types6->len = 16
nf_ct_ext_types7->len = 8

I have seen "len" up to 280 and my host has crashes w/o this patch.

The right way to fix this problem is reducing the size of the ecache
extension (4) and Florian is going to do this, but these changes will
be quite large to be appropriate for a stable tree.

Fixes: 5b423f6a40a0 (netfilter: nf_conntrack: fix racy timer handling with reliable)
Cc: Pablo Neira Ayuso <pablo@netfilter.org>
Cc: Patrick McHardy <kaber@trash.net>
Cc: Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>
Cc: "David S. Miller" <davem@davemloft.net>
Signed-off-by: Andrey Vagin <avagin@openvz.org>
Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

Before patch : 
 /* Extensions: optional stuff which isn't permanently in struct. */
 struct nf_ct_ext {
 	struct rcu_head rcu;
 	u8 offset[NF_CT_EXT_NUM];
 	u8 len;
 	char data[0];
 };
 
After patch : 
 /* Extensions: optional stuff which isn't permanently in struct. */
 struct nf_ct_ext {
 	struct rcu_head rcu;
 	u16 offset[NF_CT_EXT_NUM];
 	u16 len;
 	char data[0];
 };
 
