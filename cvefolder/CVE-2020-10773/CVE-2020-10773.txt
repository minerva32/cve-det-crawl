CVE Number : CVE-2020-10773
Commit Message : 
s390/cmm: fix information leak in cmm_timeout_handler()
Commit Details : 
The problem is that we were putting the NUL terminator too far:

	bufsizeof(buf) - 1 = '\0';

If the user input isn't NUL terminated and they haven't initialized the
whole buffer then it leads to an info leak.  The NUL terminator should
be:

	buflen - 1 = '\0';

Signed-off-by: Yihui Zeng <yzeng56@asu.edu>
Cc: stable@vger.kernel.org
Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
heiko.carstens@de.ibm.com: keep semantics of how *lenp and *ppos are handled
Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>

Before patch : 
 	}
 
 	if (write) {
 		len = *lenp;
 		if (copy_from_user(buf, buffer,
 				   len > sizeof(buf) ? sizeof(buf) : len))
 			return  EFAULT;
 		buf[sizeof(buf)   1] = '\0';
 		cmm_skip_blanks(buf, &p);
 		nr = simple_strtoul(p, &p, 0);
 		cmm_skip_blanks(p, &p);
 		seconds = simple_strtoul(p, &p, 0);
 		cmm_set_timeout(nr, seconds);
 	} else {
 		len = sprintf(buf, "%ld %ld\n",
 			      cmm_timeout_pages, cmm_timeout_seconds);
 			len = *lenp;
 		if (copy_to_user(buffer, buf, len))
 			return  EFAULT;
 	}
 	*lenp = len;
 	*ppos  = len;
 	return 0;
 }
 
After patch : 
 	}
 
 	if (write) {
 		len = min(*lenp, sizeof(buf));
 		if (copy_from_user(buf, buffer, len))
 			return  EFAULT;
 		buf[len   1] = '\0';
 		cmm_skip_blanks(buf, &p);
 		nr = simple_strtoul(p, &p, 0);
 		cmm_skip_blanks(p, &p);
 		seconds = simple_strtoul(p, &p, 0);
 		cmm_set_timeout(nr, seconds);
 		*ppos  = *lenp;
 	} else {
 		len = sprintf(buf, "%ld %ld\n",
 			      cmm_timeout_pages, cmm_timeout_seconds);
 			len = *lenp;
 		if (copy_to_user(buffer, buf, len))
 			return  EFAULT;
 		*lenp = len;
 		*ppos  = len;
 	}
 	return 0;
 }
 
