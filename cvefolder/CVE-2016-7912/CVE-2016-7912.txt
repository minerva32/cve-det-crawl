CVE Number : CVE-2016-7912
Commit Message : 
usb: gadget: f_fs: Fix use-after-free
Commit Details : 
When using asynchronous read or write operations on the USB endpoints the
issuer of the IO request is notified by calling the ki_complete() callback
of the submitted kiocb when the URB has been completed.

Calling this ki_complete() callback will free kiocb. Make sure that the
structure is no longer accessed beyond that point, otherwise undefined
behaviour might occur.

Fixes: 2e4c7553cd6f ("usb: gadget: f_fs: add aio support")
Cc: <stable@vger.kernel.org> # v3.15+
Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>

Before patch : 
 						   work);
 	int ret = io_data >req >status ? io_data >req >status :
 					 io_data >req >actual;
 
 	if (io_data >read && ret > 0) {
 		use_mm(io_data >mm);
 
 	io_data >kiocb >ki_complete(io_data >kiocb, ret, ret);
 
 	if (io_data >ffs >ffs_eventfd &&
 	    !(io_data >kiocb >ki_flags & IOCB_EVENTFD))
 		eventfd_signal(io_data >ffs >ffs_eventfd, 1);
 
 	usb_ep_free_request(io_data >ep, io_data >req);
 
 	io_data >kiocb >private = NULL;
 	if (io_data >read)
 		kfree(io_data >to_free);
 	kfree(io_data >buf);
After patch : 
 						   work);
 	int ret = io_data >req >status ? io_data >req >status :
 					 io_data >req >actual;
 	bool kiocb_has_eventfd = io_data >kiocb >ki_flags & IOCB_EVENTFD;
 
 	if (io_data >read && ret > 0) {
 		use_mm(io_data >mm);
 
 	io_data >kiocb >ki_complete(io_data >kiocb, ret, ret);
 
 	if (io_data >ffs >ffs_eventfd && !kiocb_has_eventfd)
 		eventfd_signal(io_data >ffs >ffs_eventfd, 1);
 
 	usb_ep_free_request(io_data >ep, io_data >req);
 
 	if (io_data >read)
 		kfree(io_data >to_free);
 	kfree(io_data >buf);
