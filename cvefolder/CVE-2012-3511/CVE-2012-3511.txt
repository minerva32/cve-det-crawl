CVE Number : CVE-2012-3511
Commit Message : 
mm: Hold a file reference in madvise_remove
Commit Details : 
Otherwise the code races with munmap (causing a use-after-free
of the vma) or with close (causing a use-after-free of the struct
file).

The bug was introduced by commit 90ed52ebe481 ("PATCH holepunch: fix
mmap_sem i_mutex deadlock")

Cc: Hugh Dickins <hugh@veritas.com>
Cc: Miklos Szeredi <mszeredi@suse.cz>
Cc: Badari Pulavarty <pbadari@us.ibm.com>
Cc: Nick Piggin <npiggin@suse.de>
Cc: stable@vger.kernel.org
Signed-off-by: Andy Lutomirski <luto@amacapital.net>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

Before patch : 
 #include <linux/sched.h>
 #include <linux/ksm.h>
 #include <linux/fs.h>
 
 /*
  * Any behaviour which results in changes to the vma >vm_flags needs to
 {
 	loff_t offset;
 	int error;
 
 	*prev = NULL;	/* tell sys_madvise we drop mmap_sem */
 
 	if (vma >vm_flags & (VM_LOCKED|VM_NONLINEAR|VM_HUGETLB))
 		return  EINVAL;
 
 	if (!vma >vm_file || !vma >vm_file >f_mapping
 		|| !vma >vm_file >f_mapping >host) {
 			return  EINVAL;
 	}
 
 	offset = (loff_t)(start   vma >vm_start)
 			  ((loff_t)vma >vm_pgoff << PAGE_SHIFT);
 
 	/* filesystem's fallocate may need to take i_mutex */
 	up_read(&current >mm >mmap_sem);
 	error = do_fallocate(vma >vm_file,
 				FALLOC_FL_PUNCH_HOLE | FALLOC_FL_KEEP_SIZE,
 				offset, end   start);
 	down_read(&current >mm >mmap_sem);
 	return error;
 }
After patch : 
 #include <linux/sched.h>
 #include <linux/ksm.h>
 #include <linux/fs.h>
 #include <linux/file.h>
 
 /*
  * Any behaviour which results in changes to the vma >vm_flags needs to
 {
 	loff_t offset;
 	int error;
 	struct file *f;
 
 	*prev = NULL;	/* tell sys_madvise we drop mmap_sem */
 
 	if (vma >vm_flags & (VM_LOCKED|VM_NONLINEAR|VM_HUGETLB))
 		return  EINVAL;
 
 	f = vma >vm_file;
 
 	if (!f || !f >f_mapping || !f >f_mapping >host) {
 			return  EINVAL;
 	}
 
 	offset = (loff_t)(start   vma >vm_start)
 			  ((loff_t)vma >vm_pgoff << PAGE_SHIFT);
 
 	/*
 	 * Filesystem's fallocate may need to take i_mutex.  We need to
 	 * explicitly grab a reference because the vma (and hence the
 	 * vma's reference to the file) can go away as soon as we drop
 	 * mmap_sem.
 	 */
 	get_file(f);
 	up_read(&current >mm >mmap_sem);
 	error = do_fallocate(f,
 				FALLOC_FL_PUNCH_HOLE | FALLOC_FL_KEEP_SIZE,
 				offset, end   start);
 	fput(f);
 	down_read(&current >mm >mmap_sem);
 	return error;
 }
