CVE Number : CVE-2020-14314
Commit Message : 
ext4: fix potential negative array index in do_split()
Commit Details : 
If for any reason a directory passed to do_split() does not have enough
active entries to exceed half the size of the block, we can end up
iterating over all "count" entries without finding a split point.

In this case, count == move, and split will be zero, and we will
attempt a negative index into map.

Guard against this by detecting this case, and falling back to
split-to-half-of-count instead; in this case we will still have
plenty of space (> half blocksize) in each split block.

Fixes: ef2b02d3e617 ("ext34: ensure do_split leaves enough free space in both blocks")
Signed-off-by: Eric Sandeen <sandeen@redhat.com>
Reviewed-by: Andreas Dilger <adilger@dilger.ca>
Reviewed-by: Jan Kara <jack@suse.cz>
Link: https://lore.kernel.org/r/f53e246b-647c-64bb-16ec-135383c70ad7@redhat.com
Signed-off-by: Theodore Ts'o <tytso@mit.edu>

Before patch : 
 			     blocksize, hinfo, map);
 	map  = count;
 	dx_sort_map(map, count);
 	/* Split the existing block in the middle, size wise */
 	size = 0;
 	move = 0;
 	for (i = count 1; i >= 0; i  ) {
 		size  = map[i].size;
 		move  ;
 	}
 	/* map index at which we will split */
 	split = count   move;
 	hash2 = map[split].hash;
 	continued = hash2 == map[split   1].hash;
 	dxtrace(printk(KERN_INFO "Split block %lu at %x, %i/%i\n",
After patch : 
 			     blocksize, hinfo, map);
 	map  = count;
 	dx_sort_map(map, count);
 	/* Ensure that neither split block is over half full */
 	size = 0;
 	move = 0;
 	for (i = count 1; i >= 0; i  ) {
 		size  = map[i].size;
 		move  ;
 	}
 	/*
 	 * map index at which we will split
 	 *
 	 * If the sum of active entries didn't exceed half the block size, just
 	 * split it in half by count; each resulting block will have at least
 	 * half the space free.
 	 */
 	if (i > 0)
 		split = count   move;
 	else
 		split = count/2;
 
 	hash2 = map[split].hash;
 	continued = hash2 == map[split   1].hash;
 	dxtrace(printk(KERN_INFO "Split block %lu at %x, %i/%i\n",
