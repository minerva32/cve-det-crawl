CVE Number : CVE-2017-16995
Commit Message : 
bpf: fix incorrect sign extension in check_alu_op()
Commit Details : 
Distinguish between
BPF_ALU64|BPF_MOV|BPF_K (load 32-bit immediate, sign-extended to 64-bit)
and BPF_ALU|BPF_MOV|BPF_K (load 32-bit immediate, zero-padded to 64-bit);
only perform sign extension in the first case.

Starting with v4.14, this is exploitable by unprivileged users as long as
the unprivileged_bpf_disabled sysctl isn't set.

Debian assigned CVE-2017-16995 for this issue.

v3:
 - add CVE number (Ben Hutchings)

Fixes: 484611357c19 ("bpf: allow access into map value arrays")
Signed-off-by: Jann Horn <jannh@google.com>
Acked-by: Edward Cree <ecree@solarflare.com>
Signed-off-by: Alexei Starovoitov <ast@kernel.org>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>

Before patch : 
 			 * remember the value we stored into this reg
 			 */
 			regs[insn >dst_reg].type = SCALAR_VALUE;
 			__mark_reg_known(regs   insn >dst_reg, insn >imm);
 		}
 
 	} else if (opcode > BPF_END) {
After patch : 
 			 * remember the value we stored into this reg
 			 */
 			regs[insn >dst_reg].type = SCALAR_VALUE;
 			if (BPF_CLASS(insn >code) == BPF_ALU64) {
 				__mark_reg_known(regs   insn >dst_reg,
 						 insn >imm);
 			} else {
 				__mark_reg_known(regs   insn >dst_reg,
 						 (u32)insn >imm);
 			}
 		}
 
 	} else if (opcode > BPF_END) {
