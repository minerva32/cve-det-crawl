CVE Number : CVE-2010-4527
Commit Message : 
sound: Prevent buffer overflow in OSS load_mixer_volumes
Commit Details : 
The load_mixer_volumes() function, which can be triggered by
unprivileged users via the SOUND_MIXER_SETLEVELS ioctl, is vulnerable to
a buffer overflow.  Because the provided "name" argument isn't
guaranteed to be NULL terminated at the expected 32 bytes, it's possible
to overflow past the end of the last element in the mixer_vols array.
Further exploitation can result in an arbitrary kernel write (via
subsequent calls to load_mixer_volumes()) leading to privilege
escalation, or arbitrary kernel reads via get_mixer_levels().  In
addition, the strcmp() may leak bytes beyond the mixer_vols array.

Signed-off-by: Dan Rosenberg <drosenberg@vsecurity.com>
Cc: stable <stable@kernel.org>
Signed-off-by: Takashi Iwai <tiwai@suse.de>

Before patch : 
 	int             i, n;
 
 	for (i = 0; i < num_mixer_volumes; i  ) {
 		if (strcmp(name, mixer_vols[i].name) == 0) {
 			if (present)
 				mixer_vols[i].num = i;
 			return mixer_vols[i].levels;
 	}
 	n = num_mixer_volumes  ;
 
 	strcpy(mixer_vols[n].name, name);
 
 	if (present)
 		mixer_vols[n].num = n;
After patch : 
 	int             i, n;
 
 	for (i = 0; i < num_mixer_volumes; i  ) {
 		if (strncmp(name, mixer_vols[i].name, 32) == 0) {
 			if (present)
 				mixer_vols[i].num = i;
 			return mixer_vols[i].levels;
 	}
 	n = num_mixer_volumes  ;
 
 	strncpy(mixer_vols[n].name, name, 32);
 
 	if (present)
 		mixer_vols[n].num = n;
