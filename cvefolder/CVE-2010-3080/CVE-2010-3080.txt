CVE Number : CVE-2010-3080
Commit Message : 
ALSA: seq/oss - Fix double-free at error path of snd_seq_oss_open()
Commit Details : 
The error handling in snd_seq_oss_open() has several bad codes that
do dereferecing released pointers and double-free of kmalloc'ed data.
The object dp is release in free_devinfo() that is called via
private_free callback.  The rest shouldn't touch this object any more.

The patch changes delete_port() to call kfree() in any case, and gets
rid of unnecessary calls of destructors in snd_seq_oss_open().

Fixes CVE-2010-3080.

Reported-and-tested-by: Tavis Ormandy <taviso@cmpxchg8b.com>
Cc: <stable@kernel.org>
Signed-off-by: Takashi Iwai <tiwai@suse.de>

Before patch : 
 	return 0;
 
  _error:
 	snd_seq_oss_writeq_delete(dp >writeq);
 	snd_seq_oss_readq_delete(dp >readq);
 	snd_seq_oss_synth_cleanup(dp);
 	snd_seq_oss_midi_cleanup(dp);
 	delete_port(dp);
 	delete_seq_queue(dp >queue);
 	kfree(dp);
 
 	return rc;
 }
 static int
 delete_port(struct seq_oss_devinfo *dp)
 {
 	if (dp >port < 0)
 		return 0;
 
 	debug_printk(("delete_port %i\n", dp >port));
 	return snd_seq_event_port_detach(dp >cseq, dp >port);
After patch : 
 	return 0;
 
  _error:
 	snd_seq_oss_synth_cleanup(dp);
 	snd_seq_oss_midi_cleanup(dp);
 	delete_seq_queue(dp >queue);
 	delete_port(dp);
 
 	return rc;
 }
 static int
 delete_port(struct seq_oss_devinfo *dp)
 {
 	if (dp >port < 0) {
 		kfree(dp);
 		return 0;
 	}
 
 	debug_printk(("delete_port %i\n", dp >port));
 	return snd_seq_event_port_detach(dp >cseq, dp >port);
