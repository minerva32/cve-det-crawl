CVE Number : CVE-2006-1522
Commit Message : 
Security Keys: Fix oops when adding key to non-keyring
Commit Details : 
This fixes the problem of an oops occuring when a user attempts to add a
key to a non-keyring key CVE-2006-1522.

The problem is that __keyring_search_one() doesn't check that the
keyring it's been given is actually a keyring.

I've fixed this problem by:

 (1) declaring that caller of __keyring_search_one() must guarantee that
     the keyring is a keyring; and

 (2) making key_create_or_update() check that the keyring is a keyring,
     and return -ENOTDIR if it isn't.

This can be tested by:

	keyctl add user b b `keyctl add user a a @s`

Signed-off-by: David Howells <dhowells@redhat.com>
Signed-off-by: Linus Torvalds <torvalds@osdl.org>

Before patch : 
 
 	key_check(keyring);
 
 	down_write(&keyring >sem);
 
 	/* if we're going to allocate a new key, we're going to have
 /*
  * search the given keyring only (no recursion)
  *   keyring must be locked by caller
  */
 key_ref_t __keyring_search_one(key_ref_t keyring_ref,
 			       const struct key_type *ktype,
After patch : 
 
 	key_check(keyring);
 
 	key_ref = ERR_PTR( ENOTDIR);
 	if (keyring >type != &key_type_keyring)
 		goto error_2;
 
 	down_write(&keyring >sem);
 
 	/* if we're going to allocate a new key, we're going to have
 /*
  * search the given keyring only (no recursion)
  *   keyring must be locked by caller
  *   caller must guarantee that the keyring is a keyring
  */
 key_ref_t __keyring_search_one(key_ref_t keyring_ref,
 			       const struct key_type *ktype,
