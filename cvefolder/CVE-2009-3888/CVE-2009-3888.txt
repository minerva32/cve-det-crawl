CVE Number : CVE-2009-3888
Commit Message : 
NOMMU: Don't pass NULL pointers to fput() in do_mmap_pgoff()
Commit Details : 
Don't pass NULL pointers to fput() in the error handling paths of the NOMMU
do_mmap_pgoff() as it can't handle it.

The following can be used as a test program:

	int main() { static long long a1024 * 1024 * 20 = { 0 }; return a;}

Without the patch, the code oopses in atomic_long_dec_and_test() as called by
fput() after the kernel complains that it can't allocate that big a chunk of
memory.  With the patch, the kernel just complains about the allocation size
and then the program segfaults during execve() as execve() can't complete the
allocation of all the new ELF program segments.

Reported-by: Robin Getz <rgetz@blackfin.uclinux.org>
Signed-off-by: David Howells <dhowells@redhat.com>
Acked-by: Robin Getz <rgetz@blackfin.uclinux.org>
Cc: stable@kernel.org
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

Before patch : 
 error_just_free:
 	up_write(&nommu_region_sem);
 error:
 	fput(region >vm_file);
 	kmem_cache_free(vm_region_jar, region);
 	fput(vma >vm_file);
 	if (vma >vm_flags & VM_EXECUTABLE)
 		removed_exe_file_vma(vma >vm_mm);
 	kmem_cache_free(vm_area_cachep, vma);
After patch : 
 error_just_free:
 	up_write(&nommu_region_sem);
 error:
 	if (region >vm_file)
 		fput(region >vm_file);
 	kmem_cache_free(vm_region_jar, region);
 	if (vma >vm_file)
 		fput(vma >vm_file);
 	if (vma >vm_flags & VM_EXECUTABLE)
 		removed_exe_file_vma(vma >vm_mm);
 	kmem_cache_free(vm_area_cachep, vma);
